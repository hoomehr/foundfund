{
	"results": [
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_cloudwatch_log_group.app_logs",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 332,
				"end_line": 336
			}
		},
		{
			"rule_id": "AVD-AWS-0020",
			"long_id": "aws-documentdb-enable-log-export",
			"rule_description": "DocumentDB logs export should be enabled",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Limited visibility of audit trail for changes to the DocumentDB",
			"resolution": "Enable export logs",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/documentdb/enable-log-export/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#enabled_cloudwatch_logs_exports"
			],
			"description": "Neither CloudWatch audit nor profiler log exports are enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_docdb_cluster.main_docdb_cluster",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 516,
				"end_line": 530
			}
		},
		{
			"rule_id": "AVD-AWS-0021",
			"long_id": "aws-documentdb-enable-storage-encryption",
			"rule_description": "DocumentDB storage must be encrypted",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable storage encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/documentdb/enable-storage-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#storage_encrypted"
			],
			"description": "Cluster storage does not have encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_docdb_cluster.main_docdb_cluster",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 516,
				"end_line": 530
			}
		},
		{
			"rule_id": "AVD-AWS-0022",
			"long_id": "aws-documentdb-encryption-customer-key",
			"rule_description": "DocumentDB encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/documentdb/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#kms_key_id"
			],
			"description": "Instance encryption does not use a customer-managed KMS key.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_docdb_cluster_instance.docdb_instance[0]",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 532,
				"end_line": 540
			}
		},
		{
			"rule_id": "AVD-AWS-0022",
			"long_id": "aws-documentdb-encryption-customer-key",
			"rule_description": "DocumentDB encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/documentdb/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#kms_key_id"
			],
			"description": "Instance encryption does not use a customer-managed KMS key.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_docdb_cluster_instance.docdb_instance[1]",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 532,
				"end_line": 540
			}
		},
		{
			"rule_id": "AVD-AWS-0022",
			"long_id": "aws-documentdb-encryption-customer-key",
			"rule_description": "DocumentDB encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/documentdb/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#kms_key_id"
			],
			"description": "Cluster encryption does not use a customer-managed KMS key.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_docdb_cluster.main_docdb_cluster",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 516,
				"end_line": 530
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.docdb_sg",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 254,
				"end_line": 259
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.docdb_sg",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 248,
				"end_line": 253
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.fargate_sg",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 233,
				"end_line": 238
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.fargate_sg",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 227,
				"end_line": 232
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.alb_sg",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 212,
				"end_line": 217
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.alb_sg",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 206,
				"end_line": 211
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.alb_sg",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 200,
				"end_line": 205
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.docdb_sg",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 258,
				"end_line": 258
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.fargate_sg",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 237,
				"end_line": 237
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.alb_sg",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 216,
				"end_line": 216
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.alb_sg",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 210,
				"end_line": 210
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "aws_security_group.alb_sg",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 204,
				"end_line": 204
			}
		},
		{
			"rule_id": "AVD-AWS-0178",
			"long_id": "aws-ec2-require-vpc-flow-logs-for-all-vpcs",
			"rule_description": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.",
			"resolution": "Enable flow logs for VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/"
			],
			"description": "VPC Flow Logs is not enabled for VPC ",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-vpc?ref=7666869d9ca7ff658f5bd10a29dea53bde5dc464/main.tf",
				"start_line": 28,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_ecr_repository.app_ecr_repo",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 268,
				"end_line": 268
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_ecr_repository.app_ecr_repo",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 266,
				"end_line": 275
			}
		},
		{
			"rule_id": "AVD-AWS-0034",
			"long_id": "aws-ecs-enable-container-insight",
			"rule_description": "ECS clusters should have container insights enabled",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Not all metrics and logs may be gathered for containers when Container Insights isn't enabled",
			"resolution": "Enable Container Insights",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ecs/enable-container-insight/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_cluster#setting"
			],
			"description": "Cluster does not have container insights enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_ecs_cluster.main_cluster",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 280,
				"end_line": 283
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_lb.main_alb",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 384,
				"end_line": 384
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_lb.main_alb",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 382,
				"end_line": 391
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "Public access block does not block public ACLs",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket_public_access_block.frontend_public_access",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 564,
				"end_line": 564
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "Public access block does not block public policies",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket_public_access_block.frontend_public_access",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 565,
				"end_line": 565
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.frontend_assets",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 545,
				"end_line": 548
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.frontend_assets",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 545,
				"end_line": 548
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.frontend_assets",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 545,
				"end_line": 548
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.frontend_assets",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 545,
				"end_line": 548
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "Public access block does not ignore public ACLs",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket_public_access_block.frontend_public_access",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 566,
				"end_line": 566
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "Public access block does not restrict public buckets",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket_public_access_block.frontend_public_access",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 567,
				"end_line": 567
			}
		},
		{
			"rule_id": "AVD-AWS-0098",
			"long_id": "aws-ssm-secret-use-customer-key",
			"rule_description": "Secrets Manager should use customer managed keys",
			"rule_provider": "aws",
			"rule_service": "ssm",
			"impact": "Using AWS managed keys reduces the flexibility and control over the encryption key",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ssm/secret-use-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret#kms_key_id"
			],
			"description": "Secret explicitly uses the default key.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_secretsmanager_secret.docdb_credentials",
			"location": {
				"filename": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
				"start_line": 492,
				"end_line": 496
			}
		}
	]
}
