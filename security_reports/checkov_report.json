[
    {
        "check_type": "terraform",
        "results": {
            "passed_checks": [
                {
                    "check_id": "CKV_TF_2",
                    "bc_check_id": "BC_CROSS_2",
                    "check_name": "Ensure Terraform module sources use a tag with a version number",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            162,
                            "module \"vpc\" {\n"
                        ],
                        [
                            163,
                            "  source  = \"terraform-aws-modules/vpc/aws\"\n"
                        ],
                        [
                            164,
                            "  version = \"5.5.1\" # Use a recent, stable version\n"
                        ],
                        [
                            165,
                            "\n"
                        ],
                        [
                            166,
                            "  name = \"${var.project_name}-vpc-${var.environment}\"\n"
                        ],
                        [
                            167,
                            "  cidr = var.vpc_cidr_block\n"
                        ],
                        [
                            168,
                            "\n"
                        ],
                        [
                            169,
                            "  azs             = var.availability_zones\n"
                        ],
                        [
                            170,
                            "  public_subnets  = var.public_subnet_cidrs\n"
                        ],
                        [
                            171,
                            "  private_subnets = var.private_subnet_cidrs\n"
                        ],
                        [
                            172,
                            "\n"
                        ],
                        [
                            173,
                            "  enable_nat_gateway     = true\n"
                        ],
                        [
                            174,
                            "  single_nat_gateway     = false # Set to true for cost saving in dev, false for HA\n"
                        ],
                        [
                            175,
                            "  one_nat_gateway_per_az = true  # For HA\n"
                        ],
                        [
                            176,
                            "\n"
                        ],
                        [
                            177,
                            "  enable_dns_hostnames = true\n"
                        ],
                        [
                            178,
                            "  enable_dns_support   = true\n"
                        ],
                        [
                            179,
                            "\n"
                        ],
                        [
                            180,
                            "  tags = local.tags\n"
                        ],
                        [
                            181,
                            "\n"
                        ],
                        [
                            182,
                            "  public_subnet_tags = {\n"
                        ],
                        [
                            183,
                            "    \"kubernetes.io/role/elb\" = \"1\" # For ALB auto-discovery if using Kubernetes later\n"
                        ],
                        [
                            184,
                            "  }\n"
                        ],
                        [
                            185,
                            "  private_subnet_tags = {\n"
                        ],
                        [
                            186,
                            "    \"kubernetes.io/role/internal-elb\" = \"1\"\n"
                        ],
                        [
                            187,
                            "  }\n"
                        ],
                        [
                            188,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        162,
                        188
                    ],
                    "resource": "vpc",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.module.generic.RevisionVersionTag",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/supply-chain-policies/terraform-policies/ensure-terraform-module-sources-use-tag",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "cidr": [
                            {
                                "type": "variable",
                                "name": "vpc_cidr_block",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "public_subnets": [
                            {
                                "type": "variable",
                                "name": "public_subnet_cidrs",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "private_subnets": [
                            {
                                "type": "variable",
                                "name": "private_subnet_cidrs",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "azs": [
                            {
                                "type": "variable",
                                "name": "availability_zones",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_TF_2",
                    "bc_check_id": "BC_CROSS_2",
                    "check_name": "Ensure Terraform module sources use a tag with a version number",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            614,
                            "module \"acm\" {\n"
                        ],
                        [
                            615,
                            "  source  = \"terraform-aws-modules/acm/aws\"\n"
                        ],
                        [
                            616,
                            "  version = \"~> 4.0\" # Check for latest stable version\n"
                        ],
                        [
                            617,
                            "\n"
                        ],
                        [
                            618,
                            "  # Only create if domain_name is provided\n"
                        ],
                        [
                            619,
                            "  # This will attempt to create a certificate and validate it via DNS (if Route 53 zone is managed by AWS)\n"
                        ],
                        [
                            620,
                            "  # or email validation. For DNS validation to work automatically, Route 53 zone must exist.\n"
                        ],
                        [
                            621,
                            "  count = var.domain_name != \"\" ? 1 : 0\n"
                        ],
                        [
                            622,
                            "\n"
                        ],
                        [
                            623,
                            "  domain_name = var.domain_name # e.g., example.com\n"
                        ],
                        [
                            624,
                            "  zone_id     = var.domain_name != \"\" ? data.aws_route53_zone.selected[0].zone_id : null\n"
                        ],
                        [
                            625,
                            "\n"
                        ],
                        [
                            626,
                            "  subject_alternative_names = [\n"
                        ],
                        [
                            627,
                            "    var.domain_name != \"\" ? \"*.${var.domain_name}\" : \"\", # Wildcard for subdomains like www, api\n"
                        ],
                        [
                            628,
                            "    var.domain_name != \"\" ? \"${var.api_subdomain}.${var.domain_name}\" : \"\",\n"
                        ],
                        [
                            629,
                            "    var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"\n"
                        ],
                        [
                            630,
                            "  ]\n"
                        ],
                        [
                            631,
                            "  wait_for_validation = true # Can take time\n"
                        ],
                        [
                            632,
                            "\n"
                        ],
                        [
                            633,
                            "  tags = local.tags\n"
                        ],
                        [
                            634,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        614,
                        634
                    ],
                    "resource": "acm",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.module.generic.RevisionVersionTag",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/supply-chain-policies/terraform-policies/ensure-terraform-module-sources-use-tag",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "count": [
                            {
                                "type": "variable",
                                "name": "domain_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "domain_name": [
                            {
                                "type": "variable",
                                "name": "domain_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "subject_alternative_names": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "zone_id": [
                            {
                                "type": "variable",
                                "name": "domain_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            24,
                            "provider \"aws\" {\n"
                        ],
                        [
                            25,
                            "  region = var.aws_region\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        24,
                        26
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "region": [
                            {
                                "type": "variable",
                                "name": "aws_region",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_277",
                    "bc_check_id": "BC_AWS_NETWORKING_78",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            195,
                            "resource \"aws_security_group\" \"alb_sg\" {\n"
                        ],
                        [
                            196,
                            "  name        = \"${var.project_name}-alb-sg-${var.environment}\"\n"
                        ],
                        [
                            197,
                            "  description = \"Allow HTTP/HTTPS traffic to ALB\"\n"
                        ],
                        [
                            198,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            199,
                            "\n"
                        ],
                        [
                            200,
                            "  ingress {\n"
                        ],
                        [
                            201,
                            "    from_port   = 80\n"
                        ],
                        [
                            202,
                            "    to_port     = 80\n"
                        ],
                        [
                            203,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            204,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            205,
                            "  }\n"
                        ],
                        [
                            206,
                            "  ingress {\n"
                        ],
                        [
                            207,
                            "    from_port   = 443\n"
                        ],
                        [
                            208,
                            "    to_port     = 443\n"
                        ],
                        [
                            209,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            210,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            211,
                            "  }\n"
                        ],
                        [
                            212,
                            "  egress {\n"
                        ],
                        [
                            213,
                            "    from_port   = 0\n"
                        ],
                        [
                            214,
                            "    to_port     = 0\n"
                        ],
                        [
                            215,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            216,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            217,
                            "  }\n"
                        ],
                        [
                            218,
                            "  tags = local.tags\n"
                        ],
                        [
                            219,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        195,
                        219
                    ],
                    "resource": "aws_security_group.alb_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            195,
                            "resource \"aws_security_group\" \"alb_sg\" {\n"
                        ],
                        [
                            196,
                            "  name        = \"${var.project_name}-alb-sg-${var.environment}\"\n"
                        ],
                        [
                            197,
                            "  description = \"Allow HTTP/HTTPS traffic to ALB\"\n"
                        ],
                        [
                            198,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            199,
                            "\n"
                        ],
                        [
                            200,
                            "  ingress {\n"
                        ],
                        [
                            201,
                            "    from_port   = 80\n"
                        ],
                        [
                            202,
                            "    to_port     = 80\n"
                        ],
                        [
                            203,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            204,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            205,
                            "  }\n"
                        ],
                        [
                            206,
                            "  ingress {\n"
                        ],
                        [
                            207,
                            "    from_port   = 443\n"
                        ],
                        [
                            208,
                            "    to_port     = 443\n"
                        ],
                        [
                            209,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            210,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            211,
                            "  }\n"
                        ],
                        [
                            212,
                            "  egress {\n"
                        ],
                        [
                            213,
                            "    from_port   = 0\n"
                        ],
                        [
                            214,
                            "    to_port     = 0\n"
                        ],
                        [
                            215,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            216,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            217,
                            "  }\n"
                        ],
                        [
                            218,
                            "  tags = local.tags\n"
                        ],
                        [
                            219,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        195,
                        219
                    ],
                    "resource": "aws_security_group.alb_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            195,
                            "resource \"aws_security_group\" \"alb_sg\" {\n"
                        ],
                        [
                            196,
                            "  name        = \"${var.project_name}-alb-sg-${var.environment}\"\n"
                        ],
                        [
                            197,
                            "  description = \"Allow HTTP/HTTPS traffic to ALB\"\n"
                        ],
                        [
                            198,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            199,
                            "\n"
                        ],
                        [
                            200,
                            "  ingress {\n"
                        ],
                        [
                            201,
                            "    from_port   = 80\n"
                        ],
                        [
                            202,
                            "    to_port     = 80\n"
                        ],
                        [
                            203,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            204,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            205,
                            "  }\n"
                        ],
                        [
                            206,
                            "  ingress {\n"
                        ],
                        [
                            207,
                            "    from_port   = 443\n"
                        ],
                        [
                            208,
                            "    to_port     = 443\n"
                        ],
                        [
                            209,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            210,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            211,
                            "  }\n"
                        ],
                        [
                            212,
                            "  egress {\n"
                        ],
                        [
                            213,
                            "    from_port   = 0\n"
                        ],
                        [
                            214,
                            "    to_port     = 0\n"
                        ],
                        [
                            215,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            216,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            217,
                            "  }\n"
                        ],
                        [
                            218,
                            "  tags = local.tags\n"
                        ],
                        [
                            219,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        195,
                        219
                    ],
                    "resource": "aws_security_group.alb_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_260",
                    "bc_check_id": "BC_AWS_NETWORKING_67",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            222,
                            "resource \"aws_security_group\" \"fargate_sg\" {\n"
                        ],
                        [
                            223,
                            "  name        = \"${var.project_name}-fargate-sg-${var.environment}\"\n"
                        ],
                        [
                            224,
                            "  description = \"Allow traffic from ALB to Fargate tasks\"\n"
                        ],
                        [
                            225,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            226,
                            "\n"
                        ],
                        [
                            227,
                            "  ingress {\n"
                        ],
                        [
                            228,
                            "    from_port       = var.app_container_port\n"
                        ],
                        [
                            229,
                            "    to_port         = var.app_container_port\n"
                        ],
                        [
                            230,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            231,
                            "    security_groups = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            232,
                            "  }\n"
                        ],
                        [
                            233,
                            "  egress { # Allow outbound traffic to internet (e.g., external APIs, ECR, DocumentDB)\n"
                        ],
                        [
                            234,
                            "    from_port   = 0\n"
                        ],
                        [
                            235,
                            "    to_port     = 0\n"
                        ],
                        [
                            236,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            237,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            238,
                            "  }\n"
                        ],
                        [
                            239,
                            "  tags = local.tags\n"
                        ],
                        [
                            240,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        222,
                        240
                    ],
                    "resource": "aws_security_group.fargate_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.from_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.to_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_277",
                    "bc_check_id": "BC_AWS_NETWORKING_78",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            222,
                            "resource \"aws_security_group\" \"fargate_sg\" {\n"
                        ],
                        [
                            223,
                            "  name        = \"${var.project_name}-fargate-sg-${var.environment}\"\n"
                        ],
                        [
                            224,
                            "  description = \"Allow traffic from ALB to Fargate tasks\"\n"
                        ],
                        [
                            225,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            226,
                            "\n"
                        ],
                        [
                            227,
                            "  ingress {\n"
                        ],
                        [
                            228,
                            "    from_port       = var.app_container_port\n"
                        ],
                        [
                            229,
                            "    to_port         = var.app_container_port\n"
                        ],
                        [
                            230,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            231,
                            "    security_groups = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            232,
                            "  }\n"
                        ],
                        [
                            233,
                            "  egress { # Allow outbound traffic to internet (e.g., external APIs, ECR, DocumentDB)\n"
                        ],
                        [
                            234,
                            "    from_port   = 0\n"
                        ],
                        [
                            235,
                            "    to_port     = 0\n"
                        ],
                        [
                            236,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            237,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            238,
                            "  }\n"
                        ],
                        [
                            239,
                            "  tags = local.tags\n"
                        ],
                        [
                            240,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        222,
                        240
                    ],
                    "resource": "aws_security_group.fargate_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.from_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.to_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            222,
                            "resource \"aws_security_group\" \"fargate_sg\" {\n"
                        ],
                        [
                            223,
                            "  name        = \"${var.project_name}-fargate-sg-${var.environment}\"\n"
                        ],
                        [
                            224,
                            "  description = \"Allow traffic from ALB to Fargate tasks\"\n"
                        ],
                        [
                            225,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            226,
                            "\n"
                        ],
                        [
                            227,
                            "  ingress {\n"
                        ],
                        [
                            228,
                            "    from_port       = var.app_container_port\n"
                        ],
                        [
                            229,
                            "    to_port         = var.app_container_port\n"
                        ],
                        [
                            230,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            231,
                            "    security_groups = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            232,
                            "  }\n"
                        ],
                        [
                            233,
                            "  egress { # Allow outbound traffic to internet (e.g., external APIs, ECR, DocumentDB)\n"
                        ],
                        [
                            234,
                            "    from_port   = 0\n"
                        ],
                        [
                            235,
                            "    to_port     = 0\n"
                        ],
                        [
                            236,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            237,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            238,
                            "  }\n"
                        ],
                        [
                            239,
                            "  tags = local.tags\n"
                        ],
                        [
                            240,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        222,
                        240
                    ],
                    "resource": "aws_security_group.fargate_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.from_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.to_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            222,
                            "resource \"aws_security_group\" \"fargate_sg\" {\n"
                        ],
                        [
                            223,
                            "  name        = \"${var.project_name}-fargate-sg-${var.environment}\"\n"
                        ],
                        [
                            224,
                            "  description = \"Allow traffic from ALB to Fargate tasks\"\n"
                        ],
                        [
                            225,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            226,
                            "\n"
                        ],
                        [
                            227,
                            "  ingress {\n"
                        ],
                        [
                            228,
                            "    from_port       = var.app_container_port\n"
                        ],
                        [
                            229,
                            "    to_port         = var.app_container_port\n"
                        ],
                        [
                            230,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            231,
                            "    security_groups = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            232,
                            "  }\n"
                        ],
                        [
                            233,
                            "  egress { # Allow outbound traffic to internet (e.g., external APIs, ECR, DocumentDB)\n"
                        ],
                        [
                            234,
                            "    from_port   = 0\n"
                        ],
                        [
                            235,
                            "    to_port     = 0\n"
                        ],
                        [
                            236,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            237,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            238,
                            "  }\n"
                        ],
                        [
                            239,
                            "  tags = local.tags\n"
                        ],
                        [
                            240,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        222,
                        240
                    ],
                    "resource": "aws_security_group.fargate_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.from_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.to_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_260",
                    "bc_check_id": "BC_AWS_NETWORKING_67",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            243,
                            "resource \"aws_security_group\" \"docdb_sg\" {\n"
                        ],
                        [
                            244,
                            "  name        = \"${var.project_name}-docdb-sg-${var.environment}\"\n"
                        ],
                        [
                            245,
                            "  description = \"Allow traffic from Fargate tasks to DocumentDB\"\n"
                        ],
                        [
                            246,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            247,
                            "\n"
                        ],
                        [
                            248,
                            "  ingress {\n"
                        ],
                        [
                            249,
                            "    from_port       = 27017 # Default MongoDB/DocumentDB port\n"
                        ],
                        [
                            250,
                            "    to_port         = 27017\n"
                        ],
                        [
                            251,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            252,
                            "    security_groups = [aws_security_group.fargate_sg.id]\n"
                        ],
                        [
                            253,
                            "  }\n"
                        ],
                        [
                            254,
                            "  egress { # Typically not needed for DB, but can be open if DB needs to reach out\n"
                        ],
                        [
                            255,
                            "    from_port   = 0\n"
                        ],
                        [
                            256,
                            "    to_port     = 0\n"
                        ],
                        [
                            257,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            258,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            259,
                            "  }\n"
                        ],
                        [
                            260,
                            "  tags = local.tags\n"
                        ],
                        [
                            261,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        243,
                        261
                    ],
                    "resource": "aws_security_group.docdb_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_277",
                    "bc_check_id": "BC_AWS_NETWORKING_78",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            243,
                            "resource \"aws_security_group\" \"docdb_sg\" {\n"
                        ],
                        [
                            244,
                            "  name        = \"${var.project_name}-docdb-sg-${var.environment}\"\n"
                        ],
                        [
                            245,
                            "  description = \"Allow traffic from Fargate tasks to DocumentDB\"\n"
                        ],
                        [
                            246,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            247,
                            "\n"
                        ],
                        [
                            248,
                            "  ingress {\n"
                        ],
                        [
                            249,
                            "    from_port       = 27017 # Default MongoDB/DocumentDB port\n"
                        ],
                        [
                            250,
                            "    to_port         = 27017\n"
                        ],
                        [
                            251,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            252,
                            "    security_groups = [aws_security_group.fargate_sg.id]\n"
                        ],
                        [
                            253,
                            "  }\n"
                        ],
                        [
                            254,
                            "  egress { # Typically not needed for DB, but can be open if DB needs to reach out\n"
                        ],
                        [
                            255,
                            "    from_port   = 0\n"
                        ],
                        [
                            256,
                            "    to_port     = 0\n"
                        ],
                        [
                            257,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            258,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            259,
                            "  }\n"
                        ],
                        [
                            260,
                            "  tags = local.tags\n"
                        ],
                        [
                            261,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        243,
                        261
                    ],
                    "resource": "aws_security_group.docdb_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            243,
                            "resource \"aws_security_group\" \"docdb_sg\" {\n"
                        ],
                        [
                            244,
                            "  name        = \"${var.project_name}-docdb-sg-${var.environment}\"\n"
                        ],
                        [
                            245,
                            "  description = \"Allow traffic from Fargate tasks to DocumentDB\"\n"
                        ],
                        [
                            246,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            247,
                            "\n"
                        ],
                        [
                            248,
                            "  ingress {\n"
                        ],
                        [
                            249,
                            "    from_port       = 27017 # Default MongoDB/DocumentDB port\n"
                        ],
                        [
                            250,
                            "    to_port         = 27017\n"
                        ],
                        [
                            251,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            252,
                            "    security_groups = [aws_security_group.fargate_sg.id]\n"
                        ],
                        [
                            253,
                            "  }\n"
                        ],
                        [
                            254,
                            "  egress { # Typically not needed for DB, but can be open if DB needs to reach out\n"
                        ],
                        [
                            255,
                            "    from_port   = 0\n"
                        ],
                        [
                            256,
                            "    to_port     = 0\n"
                        ],
                        [
                            257,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            258,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            259,
                            "  }\n"
                        ],
                        [
                            260,
                            "  tags = local.tags\n"
                        ],
                        [
                            261,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        243,
                        261
                    ],
                    "resource": "aws_security_group.docdb_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            243,
                            "resource \"aws_security_group\" \"docdb_sg\" {\n"
                        ],
                        [
                            244,
                            "  name        = \"${var.project_name}-docdb-sg-${var.environment}\"\n"
                        ],
                        [
                            245,
                            "  description = \"Allow traffic from Fargate tasks to DocumentDB\"\n"
                        ],
                        [
                            246,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            247,
                            "\n"
                        ],
                        [
                            248,
                            "  ingress {\n"
                        ],
                        [
                            249,
                            "    from_port       = 27017 # Default MongoDB/DocumentDB port\n"
                        ],
                        [
                            250,
                            "    to_port         = 27017\n"
                        ],
                        [
                            251,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            252,
                            "    security_groups = [aws_security_group.fargate_sg.id]\n"
                        ],
                        [
                            253,
                            "  }\n"
                        ],
                        [
                            254,
                            "  egress { # Typically not needed for DB, but can be open if DB needs to reach out\n"
                        ],
                        [
                            255,
                            "    from_port   = 0\n"
                        ],
                        [
                            256,
                            "    to_port     = 0\n"
                        ],
                        [
                            257,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            258,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            259,
                            "  }\n"
                        ],
                        [
                            260,
                            "  tags = local.tags\n"
                        ],
                        [
                            261,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        243,
                        261
                    ],
                    "resource": "aws_security_group.docdb_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_163",
                    "bc_check_id": "BC_AWS_GENERAL_8",
                    "check_name": "Ensure ECR image scanning on push is enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "image_scanning_configuration/[0]/scan_on_push"
                        ]
                    },
                    "code_block": [
                        [
                            266,
                            "resource \"aws_ecr_repository\" \"app_ecr_repo\" {\n"
                        ],
                        [
                            267,
                            "  name                 = \"${var.project_name}-backend-${var.environment}\"\n"
                        ],
                        [
                            268,
                            "  image_tag_mutability = \"MUTABLE\" # Or IMMUTABLE for stricter versioning\n"
                        ],
                        [
                            269,
                            "\n"
                        ],
                        [
                            270,
                            "  image_scanning_configuration {\n"
                        ],
                        [
                            271,
                            "    scan_on_push = true\n"
                        ],
                        [
                            272,
                            "  }\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  tags = local.tags\n"
                        ],
                        [
                            275,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        266,
                        275
                    ],
                    "resource": "aws_ecr_repository.app_ecr_repo",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRImageScanning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-8",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_223",
                    "bc_check_id": "BC_AWS_GENERAL_171",
                    "check_name": "Ensure ECS Cluster enables logging of ECS Exec",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "configuration/[0]/execute_command_configuration/[0]/logging"
                        ]
                    },
                    "code_block": [
                        [
                            280,
                            "resource \"aws_ecs_cluster\" \"main_cluster\" {\n"
                        ],
                        [
                            281,
                            "  name = \"${var.project_name}-cluster-${var.environment}\"\n"
                        ],
                        [
                            282,
                            "  tags = local.tags\n"
                        ],
                        [
                            283,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        280,
                        283
                    ],
                    "resource": "aws_ecs_cluster.main_cluster",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECSClusterLoggingEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-ecs-cluster-enables-logging-of-ecs-exec",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure AWS IAM policy does not allow assume role permission across all services",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            286,
                            "resource \"aws_iam_role\" \"ecs_task_execution_role\" {\n"
                        ],
                        [
                            287,
                            "  name = \"${var.project_name}-ecs-task-exec-role-${var.environment}\"\n"
                        ],
                        [
                            288,
                            "  assume_role_policy = jsonencode({\n"
                        ],
                        [
                            289,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            290,
                            "    Statement = [{\n"
                        ],
                        [
                            291,
                            "      Action = \"sts:AssumeRole\"\n"
                        ],
                        [
                            292,
                            "      Effect = \"Allow\"\n"
                        ],
                        [
                            293,
                            "      Principal = {\n"
                        ],
                        [
                            294,
                            "        Service = \"ecs-tasks.amazonaws.com\"\n"
                        ],
                        [
                            295,
                            "      }\n"
                        ],
                        [
                            296,
                            "    }]\n"
                        ],
                        [
                            297,
                            "  })\n"
                        ],
                        [
                            298,
                            "  tags = local.tags\n"
                        ],
                        [
                            299,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        286,
                        299
                    ],
                    "resource": "aws_iam_role.ecs_task_execution_role",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_274",
                    "bc_check_id": "BC_AWS_IAM_78",
                    "check_name": "Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            286,
                            "resource \"aws_iam_role\" \"ecs_task_execution_role\" {\n"
                        ],
                        [
                            287,
                            "  name = \"${var.project_name}-ecs-task-exec-role-${var.environment}\"\n"
                        ],
                        [
                            288,
                            "  assume_role_policy = jsonencode({\n"
                        ],
                        [
                            289,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            290,
                            "    Statement = [{\n"
                        ],
                        [
                            291,
                            "      Action = \"sts:AssumeRole\"\n"
                        ],
                        [
                            292,
                            "      Effect = \"Allow\"\n"
                        ],
                        [
                            293,
                            "      Principal = {\n"
                        ],
                        [
                            294,
                            "        Service = \"ecs-tasks.amazonaws.com\"\n"
                        ],
                        [
                            295,
                            "      }\n"
                        ],
                        [
                            296,
                            "    }]\n"
                        ],
                        [
                            297,
                            "  })\n"
                        ],
                        [
                            298,
                            "  tags = local.tags\n"
                        ],
                        [
                            299,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        286,
                        299
                    ],
                    "resource": "aws_iam_role.ecs_task_execution_role",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMManagedAdminPolicy",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-274",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            286,
                            "resource \"aws_iam_role\" \"ecs_task_execution_role\" {\n"
                        ],
                        [
                            287,
                            "  name = \"${var.project_name}-ecs-task-exec-role-${var.environment}\"\n"
                        ],
                        [
                            288,
                            "  assume_role_policy = jsonencode({\n"
                        ],
                        [
                            289,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            290,
                            "    Statement = [{\n"
                        ],
                        [
                            291,
                            "      Action = \"sts:AssumeRole\"\n"
                        ],
                        [
                            292,
                            "      Effect = \"Allow\"\n"
                        ],
                        [
                            293,
                            "      Principal = {\n"
                        ],
                        [
                            294,
                            "        Service = \"ecs-tasks.amazonaws.com\"\n"
                        ],
                        [
                            295,
                            "      }\n"
                        ],
                        [
                            296,
                            "    }]\n"
                        ],
                        [
                            297,
                            "  })\n"
                        ],
                        [
                            298,
                            "  tags = local.tags\n"
                        ],
                        [
                            299,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        286,
                        299
                    ],
                    "resource": "aws_iam_role.ecs_task_execution_role",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_274",
                    "bc_check_id": "BC_AWS_IAM_78",
                    "check_name": "Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            301,
                            "resource \"aws_iam_role_policy_attachment\" \"ecs_task_execution_role_policy\" {\n"
                        ],
                        [
                            302,
                            "  role       = aws_iam_role.ecs_task_execution_role.name\n"
                        ],
                        [
                            303,
                            "  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy\"\n"
                        ],
                        [
                            304,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        301,
                        304
                    ],
                    "resource": "aws_iam_role_policy_attachment.ecs_task_execution_role_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMManagedAdminPolicy",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-274",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "role": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure AWS IAM policy does not allow assume role permission across all services",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            307,
                            "resource \"aws_iam_role\" \"ecs_task_role\" {\n"
                        ],
                        [
                            308,
                            "  name = \"${var.project_name}-ecs-task-role-${var.environment}\"\n"
                        ],
                        [
                            309,
                            "  assume_role_policy = jsonencode({\n"
                        ],
                        [
                            310,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            311,
                            "    Statement = [{\n"
                        ],
                        [
                            312,
                            "      Action = \"sts:AssumeRole\"\n"
                        ],
                        [
                            313,
                            "      Effect = \"Allow\"\n"
                        ],
                        [
                            314,
                            "      Principal = {\n"
                        ],
                        [
                            315,
                            "        Service = \"ecs-tasks.amazonaws.com\"\n"
                        ],
                        [
                            316,
                            "      }\n"
                        ],
                        [
                            317,
                            "    }]\n"
                        ],
                        [
                            318,
                            "  })\n"
                        ],
                        [
                            319,
                            "  tags = local.tags\n"
                        ],
                        [
                            320,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        307,
                        320
                    ],
                    "resource": "aws_iam_role.ecs_task_role",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_274",
                    "bc_check_id": "BC_AWS_IAM_78",
                    "check_name": "Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            307,
                            "resource \"aws_iam_role\" \"ecs_task_role\" {\n"
                        ],
                        [
                            308,
                            "  name = \"${var.project_name}-ecs-task-role-${var.environment}\"\n"
                        ],
                        [
                            309,
                            "  assume_role_policy = jsonencode({\n"
                        ],
                        [
                            310,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            311,
                            "    Statement = [{\n"
                        ],
                        [
                            312,
                            "      Action = \"sts:AssumeRole\"\n"
                        ],
                        [
                            313,
                            "      Effect = \"Allow\"\n"
                        ],
                        [
                            314,
                            "      Principal = {\n"
                        ],
                        [
                            315,
                            "        Service = \"ecs-tasks.amazonaws.com\"\n"
                        ],
                        [
                            316,
                            "      }\n"
                        ],
                        [
                            317,
                            "    }]\n"
                        ],
                        [
                            318,
                            "  })\n"
                        ],
                        [
                            319,
                            "  tags = local.tags\n"
                        ],
                        [
                            320,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        307,
                        320
                    ],
                    "resource": "aws_iam_role.ecs_task_role",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMManagedAdminPolicy",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-274",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            307,
                            "resource \"aws_iam_role\" \"ecs_task_role\" {\n"
                        ],
                        [
                            308,
                            "  name = \"${var.project_name}-ecs-task-role-${var.environment}\"\n"
                        ],
                        [
                            309,
                            "  assume_role_policy = jsonencode({\n"
                        ],
                        [
                            310,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            311,
                            "    Statement = [{\n"
                        ],
                        [
                            312,
                            "      Action = \"sts:AssumeRole\"\n"
                        ],
                        [
                            313,
                            "      Effect = \"Allow\"\n"
                        ],
                        [
                            314,
                            "      Principal = {\n"
                        ],
                        [
                            315,
                            "        Service = \"ecs-tasks.amazonaws.com\"\n"
                        ],
                        [
                            316,
                            "      }\n"
                        ],
                        [
                            317,
                            "    }]\n"
                        ],
                        [
                            318,
                            "  })\n"
                        ],
                        [
                            319,
                            "  tags = local.tags\n"
                        ],
                        [
                            320,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        307,
                        320
                    ],
                    "resource": "aws_iam_role.ecs_task_role",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_274",
                    "bc_check_id": "BC_AWS_IAM_78",
                    "check_name": "Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            326,
                            "resource \"aws_iam_role_policy_attachment\" \"ecs_task_role_secrets_manager_access\" {\n"
                        ],
                        [
                            327,
                            "  role       = aws_iam_role.ecs_task_role.name\n"
                        ],
                        [
                            328,
                            "  policy_arn = \"arn:aws:iam::aws:policy/SecretsManagerReadWrite\" # Or a more restrictive custom policy\n"
                        ],
                        [
                            329,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        326,
                        329
                    ],
                    "resource": "aws_iam_role_policy_attachment.ecs_task_role_secrets_manager_access",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMManagedAdminPolicy",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-274",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "role": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_66",
                    "bc_check_id": "BC_AWS_LOGGING_13",
                    "check_name": "Ensure that CloudWatch Log Group specifies retention days",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "retention_in_days"
                        ]
                    },
                    "code_block": [
                        [
                            332,
                            "resource \"aws_cloudwatch_log_group\" \"app_logs\" {\n"
                        ],
                        [
                            333,
                            "  name              = \"/ecs/${var.project_name}-backend-${var.environment}\"\n"
                        ],
                        [
                            334,
                            "  retention_in_days = 30 # Adjust as needed\n"
                        ],
                        [
                            335,
                            "  tags              = local.tags\n"
                        ],
                        [
                            336,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        332,
                        336
                    ],
                    "resource": "aws_cloudwatch_log_group.app_logs",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudWatchLogGroupRetention",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-13",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_97",
                    "bc_check_id": "BC_AWS_GENERAL_39",
                    "check_name": "Ensure Encryption in transit is enabled for EFS volumes in ECS Task definitions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "volume"
                        ]
                    },
                    "code_block": [
                        [
                            338,
                            "resource \"aws_ecs_task_definition\" \"app_task_def\" {\n"
                        ],
                        [
                            339,
                            "  family                   = \"${var.project_name}-backend-${var.environment}\"\n"
                        ],
                        [
                            340,
                            "  network_mode             = \"awsvpc\"\n"
                        ],
                        [
                            341,
                            "  requires_compatibilities = [\"FARGATE\"]\n"
                        ],
                        [
                            342,
                            "  cpu                      = var.fargate_cpu\n"
                        ],
                        [
                            343,
                            "  memory                   = var.fargate_memory\n"
                        ],
                        [
                            344,
                            "  execution_role_arn       = aws_iam_role.ecs_task_execution_role.arn\n"
                        ],
                        [
                            345,
                            "  task_role_arn            = aws_iam_role.ecs_task_role.arn # Optional: if your app needs AWS permissions\n"
                        ],
                        [
                            346,
                            "\n"
                        ],
                        [
                            347,
                            "  container_definitions = jsonencode([{\n"
                        ],
                        [
                            348,
                            "    name      = \"${var.project_name}-backend-container\"\n"
                        ],
                        [
                            349,
                            "    image     = var.app_container_image == \"nginx:latest\" ? aws_ecr_repository.app_ecr_repo.repository_url : var.app_container_image # Use ECR repo URL once image is pushed\n"
                        ],
                        [
                            350,
                            "    cpu       = var.fargate_cpu\n"
                        ],
                        [
                            351,
                            "    memory    = var.fargate_memory\n"
                        ],
                        [
                            352,
                            "    essential = true\n"
                        ],
                        [
                            353,
                            "    portMappings = [{\n"
                        ],
                        [
                            354,
                            "      containerPort = var.app_container_port\n"
                        ],
                        [
                            355,
                            "      hostPort      = var.app_container_port # For awsvpc mode, hostPort is same as containerPort\n"
                        ],
                        [
                            356,
                            "      protocol      = \"tcp\"\n"
                        ],
                        [
                            357,
                            "    }]\n"
                        ],
                        [
                            358,
                            "    logConfiguration = {\n"
                        ],
                        [
                            359,
                            "      logDriver = \"awslogs\"\n"
                        ],
                        [
                            360,
                            "      options = {\n"
                        ],
                        [
                            361,
                            "        \"awslogs-group\"         = aws_cloudwatch_log_group.app_logs.name\n"
                        ],
                        [
                            362,
                            "        \"awslogs-region\"        = var.aws_region\n"
                        ],
                        [
                            363,
                            "        \"awslogs-stream-prefix\" = \"ecs\"\n"
                        ],
                        [
                            364,
                            "      }\n"
                        ],
                        [
                            365,
                            "    }\n"
                        ],
                        [
                            366,
                            "    # Environment variables for your application\n"
                        ],
                        [
                            367,
                            "    environment = [\n"
                        ],
                        [
                            368,
                            "      { name = \"NODE_ENV\", value = var.environment == \"prod\" ? \"production\" : \"development\" },\n"
                        ],
                        [
                            369,
                            "      { name = \"PORT\", value = tostring(var.app_container_port) },\n"
                        ],
                        [
                            370,
                            "      # Add other env vars as needed\n"
                        ],
                        [
                            371,
                            "    ]\n"
                        ],
                        [
                            372,
                            "    secrets = [ # Example for DocumentDB connection string\n"
                        ],
                        [
                            373,
                            "      {\n"
                        ],
                        [
                            374,
                            "        name      = \"MONGODB_URI\" # The env var name in your container\n"
                        ],
                        [
                            375,
                            "        valueFrom = aws_secretsmanager_secret_version.docdb_secret_version.arn\n"
                        ],
                        [
                            376,
                            "      }\n"
                        ],
                        [
                            377,
                            "    ]\n"
                        ],
                        [
                            378,
                            "  }])\n"
                        ],
                        [
                            379,
                            "  tags = local.tags\n"
                        ],
                        [
                            380,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        338,
                        380
                    ],
                    "resource": "aws_ecs_task_definition.app_task_def",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECSTaskDefinitionEFSVolumeEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-39",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "container_definitions": [
                            {
                                "type": "variable",
                                "name": "fargate_memory",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "family": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "cpu": [
                            {
                                "type": "variable",
                                "name": "fargate_cpu",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "memory": [
                            {
                                "type": "variable",
                                "name": "fargate_memory",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_249",
                    "bc_check_id": "BC_AWS_IAM_68",
                    "check_name": "Ensure that the Execution Role ARN and the Task Role ARN are different in ECS Task definitions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "execution_role_arn",
                            "task_role_arn"
                        ]
                    },
                    "code_block": [
                        [
                            338,
                            "resource \"aws_ecs_task_definition\" \"app_task_def\" {\n"
                        ],
                        [
                            339,
                            "  family                   = \"${var.project_name}-backend-${var.environment}\"\n"
                        ],
                        [
                            340,
                            "  network_mode             = \"awsvpc\"\n"
                        ],
                        [
                            341,
                            "  requires_compatibilities = [\"FARGATE\"]\n"
                        ],
                        [
                            342,
                            "  cpu                      = var.fargate_cpu\n"
                        ],
                        [
                            343,
                            "  memory                   = var.fargate_memory\n"
                        ],
                        [
                            344,
                            "  execution_role_arn       = aws_iam_role.ecs_task_execution_role.arn\n"
                        ],
                        [
                            345,
                            "  task_role_arn            = aws_iam_role.ecs_task_role.arn # Optional: if your app needs AWS permissions\n"
                        ],
                        [
                            346,
                            "\n"
                        ],
                        [
                            347,
                            "  container_definitions = jsonencode([{\n"
                        ],
                        [
                            348,
                            "    name      = \"${var.project_name}-backend-container\"\n"
                        ],
                        [
                            349,
                            "    image     = var.app_container_image == \"nginx:latest\" ? aws_ecr_repository.app_ecr_repo.repository_url : var.app_container_image # Use ECR repo URL once image is pushed\n"
                        ],
                        [
                            350,
                            "    cpu       = var.fargate_cpu\n"
                        ],
                        [
                            351,
                            "    memory    = var.fargate_memory\n"
                        ],
                        [
                            352,
                            "    essential = true\n"
                        ],
                        [
                            353,
                            "    portMappings = [{\n"
                        ],
                        [
                            354,
                            "      containerPort = var.app_container_port\n"
                        ],
                        [
                            355,
                            "      hostPort      = var.app_container_port # For awsvpc mode, hostPort is same as containerPort\n"
                        ],
                        [
                            356,
                            "      protocol      = \"tcp\"\n"
                        ],
                        [
                            357,
                            "    }]\n"
                        ],
                        [
                            358,
                            "    logConfiguration = {\n"
                        ],
                        [
                            359,
                            "      logDriver = \"awslogs\"\n"
                        ],
                        [
                            360,
                            "      options = {\n"
                        ],
                        [
                            361,
                            "        \"awslogs-group\"         = aws_cloudwatch_log_group.app_logs.name\n"
                        ],
                        [
                            362,
                            "        \"awslogs-region\"        = var.aws_region\n"
                        ],
                        [
                            363,
                            "        \"awslogs-stream-prefix\" = \"ecs\"\n"
                        ],
                        [
                            364,
                            "      }\n"
                        ],
                        [
                            365,
                            "    }\n"
                        ],
                        [
                            366,
                            "    # Environment variables for your application\n"
                        ],
                        [
                            367,
                            "    environment = [\n"
                        ],
                        [
                            368,
                            "      { name = \"NODE_ENV\", value = var.environment == \"prod\" ? \"production\" : \"development\" },\n"
                        ],
                        [
                            369,
                            "      { name = \"PORT\", value = tostring(var.app_container_port) },\n"
                        ],
                        [
                            370,
                            "      # Add other env vars as needed\n"
                        ],
                        [
                            371,
                            "    ]\n"
                        ],
                        [
                            372,
                            "    secrets = [ # Example for DocumentDB connection string\n"
                        ],
                        [
                            373,
                            "      {\n"
                        ],
                        [
                            374,
                            "        name      = \"MONGODB_URI\" # The env var name in your container\n"
                        ],
                        [
                            375,
                            "        valueFrom = aws_secretsmanager_secret_version.docdb_secret_version.arn\n"
                        ],
                        [
                            376,
                            "      }\n"
                        ],
                        [
                            377,
                            "    ]\n"
                        ],
                        [
                            378,
                            "  }])\n"
                        ],
                        [
                            379,
                            "  tags = local.tags\n"
                        ],
                        [
                            380,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        338,
                        380
                    ],
                    "resource": "aws_ecs_task_definition.app_task_def",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECSTaskDefinitionRoleCheck",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-the-aws-execution-role-arn-and-task-role-arn-are-different-in-ecs-task-definitions",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "container_definitions": [
                            {
                                "type": "variable",
                                "name": "fargate_memory",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "family": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "cpu": [
                            {
                                "type": "variable",
                                "name": "fargate_cpu",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "memory": [
                            {
                                "type": "variable",
                                "name": "fargate_memory",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_328",
                    "bc_check_id": "BC_AWS_NETWORKING_89",
                    "check_name": "Ensure that ALB is configured with defensive or strictest desync mitigation mode",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "desync_mitigation_mode"
                        ]
                    },
                    "code_block": [
                        [
                            382,
                            "resource \"aws_lb\" \"main_alb\" {\n"
                        ],
                        [
                            383,
                            "  name               = \"${var.project_name}-alb-${var.environment}\"\n"
                        ],
                        [
                            384,
                            "  internal           = false\n"
                        ],
                        [
                            385,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            386,
                            "  security_groups    = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            387,
                            "  subnets            = module.vpc.public_subnets\n"
                        ],
                        [
                            388,
                            "  enable_deletion_protection = false # Set to true for production\n"
                        ],
                        [
                            389,
                            "\n"
                        ],
                        [
                            390,
                            "  tags = local.tags\n"
                        ],
                        [
                            391,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        382,
                        391
                    ],
                    "resource": "aws_lb.main_alb",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ALBDesyncMode",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-328",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_261",
                    "bc_check_id": "BC_AWS_GENERAL_177",
                    "check_name": "Ensure HTTP HTTPS Target group defines Healthcheck",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            393,
                            "resource \"aws_lb_target_group\" \"app_tg\" {\n"
                        ],
                        [
                            394,
                            "  name        = \"${var.project_name}-tg-${var.environment}\"\n"
                        ],
                        [
                            395,
                            "  port        = var.app_container_port\n"
                        ],
                        [
                            396,
                            "  protocol    = \"HTTP\"\n"
                        ],
                        [
                            397,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            398,
                            "  target_type = \"ip\" # Required for Fargate\n"
                        ],
                        [
                            399,
                            "\n"
                        ],
                        [
                            400,
                            "  health_check {\n"
                        ],
                        [
                            401,
                            "    enabled             = true\n"
                        ],
                        [
                            402,
                            "    path                = \"/\" # Adjust to your application's health check endpoint\n"
                        ],
                        [
                            403,
                            "    protocol            = \"HTTP\"\n"
                        ],
                        [
                            404,
                            "    matcher             = \"200-399\"\n"
                        ],
                        [
                            405,
                            "    interval            = 30\n"
                        ],
                        [
                            406,
                            "    timeout             = 5\n"
                        ],
                        [
                            407,
                            "    healthy_threshold   = 2\n"
                        ],
                        [
                            408,
                            "    unhealthy_threshold = 2\n"
                        ],
                        [
                            409,
                            "  }\n"
                        ],
                        [
                            410,
                            "  tags = local.tags\n"
                        ],
                        [
                            411,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        393,
                        411
                    ],
                    "resource": "aws_lb_target_group.app_tg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LBTargetGroupsDefinesHealthcheck",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-kendra-index-server-side-encryption-uses-customer-managed-keys-cmks",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_2",
                    "bc_check_id": "BC_AWS_NETWORKING_29",
                    "check_name": "Ensure ALB protocol is HTTPS",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "default_action/[0]/redirect/[0]/protocol"
                        ]
                    },
                    "code_block": [
                        [
                            413,
                            "resource \"aws_lb_listener\" \"http_listener\" {\n"
                        ],
                        [
                            414,
                            "  load_balancer_arn = aws_lb.main_alb.arn\n"
                        ],
                        [
                            415,
                            "  port              = 80\n"
                        ],
                        [
                            416,
                            "  protocol          = \"HTTP\"\n"
                        ],
                        [
                            417,
                            "\n"
                        ],
                        [
                            418,
                            "  default_action {\n"
                        ],
                        [
                            419,
                            "    type = \"redirect\"\n"
                        ],
                        [
                            420,
                            "    redirect {\n"
                        ],
                        [
                            421,
                            "      port        = \"443\"\n"
                        ],
                        [
                            422,
                            "      protocol    = \"HTTPS\"\n"
                        ],
                        [
                            423,
                            "      status_code = \"HTTP_301\"\n"
                        ],
                        [
                            424,
                            "    }\n"
                        ],
                        [
                            425,
                            "  }\n"
                        ],
                        [
                            426,
                            "  # If you don't have a domain/ACM cert yet, use forward to target group\n"
                        ],
                        [
                            427,
                            "  # default_action {\n"
                        ],
                        [
                            428,
                            "  #   type             = \"forward\"\n"
                        ],
                        [
                            429,
                            "  #   target_group_arn = aws_lb_target_group.app_tg.arn\n"
                        ],
                        [
                            430,
                            "  # }\n"
                        ],
                        [
                            431,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        413,
                        431
                    ],
                    "resource": "aws_lb_listener.http_listener",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ALBListenerHTTPS",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-29",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_2",
                    "bc_check_id": "BC_AWS_NETWORKING_29",
                    "check_name": "Ensure ALB protocol is HTTPS",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "protocol"
                        ]
                    },
                    "code_block": [
                        [
                            433,
                            "resource \"aws_lb_listener\" \"https_listener\" {\n"
                        ],
                        [
                            434,
                            "  count             = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set\n"
                        ],
                        [
                            435,
                            "  load_balancer_arn = aws_lb.main_alb.arn\n"
                        ],
                        [
                            436,
                            "  port              = 443\n"
                        ],
                        [
                            437,
                            "  protocol          = \"HTTPS\"\n"
                        ],
                        [
                            438,
                            "  ssl_policy        = \"ELBSecurityPolicy-2016-08\" # Choose appropriate SSL policy\n"
                        ],
                        [
                            439,
                            "  certificate_arn   = module.acm.acm_certificate_arn # From ACM module below\n"
                        ],
                        [
                            440,
                            "\n"
                        ],
                        [
                            441,
                            "  default_action {\n"
                        ],
                        [
                            442,
                            "    type             = \"forward\"\n"
                        ],
                        [
                            443,
                            "    target_group_arn = aws_lb_target_group.app_tg.arn\n"
                        ],
                        [
                            444,
                            "  }\n"
                        ],
                        [
                            445,
                            "  tags = local.tags\n"
                        ],
                        [
                            446,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        433,
                        446
                    ],
                    "resource": "aws_lb_listener.https_listener[0]",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ALBListenerHTTPS",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-29",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_332",
                    "bc_check_id": "BC_AWS_GENERAL_238",
                    "check_name": "Ensure ECS Fargate services run on the latest Fargate platform version",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "launch_type",
                            "platform_version"
                        ]
                    },
                    "code_block": [
                        [
                            448,
                            "resource \"aws_ecs_service\" \"app_service\" {\n"
                        ],
                        [
                            449,
                            "  name            = \"${var.project_name}-service-${var.environment}\"\n"
                        ],
                        [
                            450,
                            "  cluster         = aws_ecs_cluster.main_cluster.id\n"
                        ],
                        [
                            451,
                            "  task_definition = aws_ecs_task_definition.app_task_def.arn\n"
                        ],
                        [
                            452,
                            "  desired_count   = var.fargate_desired_count\n"
                        ],
                        [
                            453,
                            "  launch_type     = \"FARGATE\"\n"
                        ],
                        [
                            454,
                            "\n"
                        ],
                        [
                            455,
                            "  network_configuration {\n"
                        ],
                        [
                            456,
                            "    subnets         = module.vpc.private_subnets # Run tasks in private subnets\n"
                        ],
                        [
                            457,
                            "    security_groups = [aws_security_group.fargate_sg.id]\n"
                        ],
                        [
                            458,
                            "    assign_public_ip = false # Important for tasks in private subnets\n"
                        ],
                        [
                            459,
                            "  }\n"
                        ],
                        [
                            460,
                            "\n"
                        ],
                        [
                            461,
                            "  load_balancer {\n"
                        ],
                        [
                            462,
                            "    target_group_arn = aws_lb_target_group.app_tg.arn\n"
                        ],
                        [
                            463,
                            "    container_name   = \"${var.project_name}-backend-container\"\n"
                        ],
                        [
                            464,
                            "    container_port   = var.app_container_port\n"
                        ],
                        [
                            465,
                            "  }\n"
                        ],
                        [
                            466,
                            "\n"
                        ],
                        [
                            467,
                            "  # Optional: Enable service discovery (e.g., for internal microservices communication)\n"
                        ],
                        [
                            468,
                            "  # service_registries {\n"
                        ],
                        [
                            469,
                            "  #   registry_arn = aws_service_discovery_service.example.arn\n"
                        ],
                        [
                            470,
                            "  # }\n"
                        ],
                        [
                            471,
                            "\n"
                        ],
                        [
                            472,
                            "  # Ensure tasks are replaced on new deployment\n"
                        ],
                        [
                            473,
                            "  deployment_controller {\n"
                        ],
                        [
                            474,
                            "    type = \"ECS\" # Rolling updates\n"
                        ],
                        [
                            475,
                            "  }\n"
                        ],
                        [
                            476,
                            "  \n"
                        ],
                        [
                            477,
                            "  # Optional: enable CloudWatch alarms for auto-scaling\n"
                        ],
                        [
                            478,
                            "  # depends_on = [aws_lb_listener.http_listener, aws_lb_listener.https_listener] # If HTTPS listener is used\n"
                        ],
                        [
                            479,
                            "\n"
                        ],
                        [
                            480,
                            "  tags = local.tags\n"
                        ],
                        [
                            481,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        448,
                        481
                    ],
                    "resource": "aws_ecs_service.app_service",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECSServiceFargateLatest",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-332",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "load_balancer.container_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "load_balancer.container_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "desired_count": [
                            {
                                "type": "variable",
                                "name": "fargate_desired_count",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_333",
                    "bc_check_id": "BC_AWS_LOGGING_45",
                    "check_name": "Ensure ECS services do not have public IP addresses assigned to them automatically",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "network_configuration/[0]/assign_public_ip"
                        ]
                    },
                    "code_block": [
                        [
                            448,
                            "resource \"aws_ecs_service\" \"app_service\" {\n"
                        ],
                        [
                            449,
                            "  name            = \"${var.project_name}-service-${var.environment}\"\n"
                        ],
                        [
                            450,
                            "  cluster         = aws_ecs_cluster.main_cluster.id\n"
                        ],
                        [
                            451,
                            "  task_definition = aws_ecs_task_definition.app_task_def.arn\n"
                        ],
                        [
                            452,
                            "  desired_count   = var.fargate_desired_count\n"
                        ],
                        [
                            453,
                            "  launch_type     = \"FARGATE\"\n"
                        ],
                        [
                            454,
                            "\n"
                        ],
                        [
                            455,
                            "  network_configuration {\n"
                        ],
                        [
                            456,
                            "    subnets         = module.vpc.private_subnets # Run tasks in private subnets\n"
                        ],
                        [
                            457,
                            "    security_groups = [aws_security_group.fargate_sg.id]\n"
                        ],
                        [
                            458,
                            "    assign_public_ip = false # Important for tasks in private subnets\n"
                        ],
                        [
                            459,
                            "  }\n"
                        ],
                        [
                            460,
                            "\n"
                        ],
                        [
                            461,
                            "  load_balancer {\n"
                        ],
                        [
                            462,
                            "    target_group_arn = aws_lb_target_group.app_tg.arn\n"
                        ],
                        [
                            463,
                            "    container_name   = \"${var.project_name}-backend-container\"\n"
                        ],
                        [
                            464,
                            "    container_port   = var.app_container_port\n"
                        ],
                        [
                            465,
                            "  }\n"
                        ],
                        [
                            466,
                            "\n"
                        ],
                        [
                            467,
                            "  # Optional: Enable service discovery (e.g., for internal microservices communication)\n"
                        ],
                        [
                            468,
                            "  # service_registries {\n"
                        ],
                        [
                            469,
                            "  #   registry_arn = aws_service_discovery_service.example.arn\n"
                        ],
                        [
                            470,
                            "  # }\n"
                        ],
                        [
                            471,
                            "\n"
                        ],
                        [
                            472,
                            "  # Ensure tasks are replaced on new deployment\n"
                        ],
                        [
                            473,
                            "  deployment_controller {\n"
                        ],
                        [
                            474,
                            "    type = \"ECS\" # Rolling updates\n"
                        ],
                        [
                            475,
                            "  }\n"
                        ],
                        [
                            476,
                            "  \n"
                        ],
                        [
                            477,
                            "  # Optional: enable CloudWatch alarms for auto-scaling\n"
                        ],
                        [
                            478,
                            "  # depends_on = [aws_lb_listener.http_listener, aws_lb_listener.https_listener] # If HTTPS listener is used\n"
                        ],
                        [
                            479,
                            "\n"
                        ],
                        [
                            480,
                            "  tags = local.tags\n"
                        ],
                        [
                            481,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        448,
                        481
                    ],
                    "resource": "aws_ecs_service.app_service",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECSServicePublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-333",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "load_balancer.container_name": [
                            {
                                "type": "variable",
                                "name": "project_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "load_balancer.container_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "desired_count": [
                            {
                                "type": "variable",
                                "name": "fargate_desired_count",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            545,
                            "resource \"aws_s3_bucket\" \"frontend_assets\" {\n"
                        ],
                        [
                            546,
                            "  bucket = local.frontend_s3_bucket_name\n"
                        ],
                        [
                            547,
                            "  tags   = local.tags\n"
                        ],
                        [
                            548,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        545,
                        548
                    ],
                    "resource": "aws_s3_bucket.frontend_assets",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "bucket": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            571,
                            "resource \"aws_s3_bucket_policy\" \"frontend_bucket_policy\" {\n"
                        ],
                        [
                            572,
                            "  bucket = aws_s3_bucket.frontend_assets.id\n"
                        ],
                        [
                            573,
                            "  policy = jsonencode({\n"
                        ],
                        [
                            574,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            575,
                            "    Statement = [\n"
                        ],
                        [
                            576,
                            "      {\n"
                        ],
                        [
                            577,
                            "        Sid       = \"PublicReadGetObject\"\n"
                        ],
                        [
                            578,
                            "        Effect    = \"Allow\"\n"
                        ],
                        [
                            579,
                            "        Principal = \"*\"\n"
                        ],
                        [
                            580,
                            "        Action    = \"s3:GetObject\"\n"
                        ],
                        [
                            581,
                            "        Resource  = \"${aws_s3_bucket.frontend_assets.arn}/*\"\n"
                        ],
                        [
                            582,
                            "      }\n"
                        ],
                        [
                            583,
                            "    ]\n"
                        ],
                        [
                            584,
                            "  })\n"
                        ],
                        [
                            585,
                            "  depends_on = [aws_s3_bucket_public_access_block.frontend_public_access]\n"
                        ],
                        [
                            586,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        571,
                        586
                    ],
                    "resource": "aws_s3_bucket_policy.frontend_bucket_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_216",
                    "bc_check_id": "BC_AWS_GENERAL_148",
                    "check_name": "Ensure CloudFront distribution is enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "enabled"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-cloudfront-distribution-is-enabled",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_305",
                    "bc_check_id": "BC_AWS_GENERAL_219",
                    "check_name": "Ensure CloudFront distribution has a default root object configured",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "default_root_object"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionDefaultRoot",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-305",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_34",
                    "bc_check_id": "BC_AWS_NETWORKING_32",
                    "check_name": "Ensure CloudFront distribution ViewerProtocolPolicy is set to HTTPS",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "default_cache_behavior/[0]/viewer_protocol_policy"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-32",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_174",
                    "bc_check_id": "BC_AWS_NETWORKING_63",
                    "check_name": "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "viewer_certificate/[0]/minimum_protocol_version"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontTLS12",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-networking-63",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_74",
                    "bc_check_id": null,
                    "check_name": "Ensure AWS Load Balancers use strong ciphers",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_lb_listener": {
                                "http_listener": {
                                    "__end_line__": 431,
                                    "__start_line__": 413,
                                    "default_action": [
                                        {
                                            "redirect": [
                                                {
                                                    "port": [
                                                        "443"
                                                    ],
                                                    "protocol": [
                                                        "HTTPS"
                                                    ],
                                                    "status_code": [
                                                        "HTTP_301"
                                                    ]
                                                }
                                            ],
                                            "type": [
                                                "redirect"
                                            ]
                                        }
                                    ],
                                    "load_balancer_arn": [
                                        "aws_lb.main_alb.arn"
                                    ],
                                    "port": [
                                        80
                                    ],
                                    "protocol": [
                                        "HTTP"
                                    ],
                                    "__address__": "aws_lb_listener.http_listener",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "protocol",
                            "ssl_policy"
                        ]
                    },
                    "code_block": [
                        [
                            413,
                            "resource \"aws_lb_listener\" \"http_listener\" {\n"
                        ],
                        [
                            414,
                            "  load_balancer_arn = aws_lb.main_alb.arn\n"
                        ],
                        [
                            415,
                            "  port              = 80\n"
                        ],
                        [
                            416,
                            "  protocol          = \"HTTP\"\n"
                        ],
                        [
                            417,
                            "\n"
                        ],
                        [
                            418,
                            "  default_action {\n"
                        ],
                        [
                            419,
                            "    type = \"redirect\"\n"
                        ],
                        [
                            420,
                            "    redirect {\n"
                        ],
                        [
                            421,
                            "      port        = \"443\"\n"
                        ],
                        [
                            422,
                            "      protocol    = \"HTTPS\"\n"
                        ],
                        [
                            423,
                            "      status_code = \"HTTP_301\"\n"
                        ],
                        [
                            424,
                            "    }\n"
                        ],
                        [
                            425,
                            "  }\n"
                        ],
                        [
                            426,
                            "  # If you don't have a domain/ACM cert yet, use forward to target group\n"
                        ],
                        [
                            427,
                            "  # default_action {\n"
                        ],
                        [
                            428,
                            "  #   type             = \"forward\"\n"
                        ],
                        [
                            429,
                            "  #   target_group_arn = aws_lb_target_group.app_tg.arn\n"
                        ],
                        [
                            430,
                            "  # }\n"
                        ],
                        [
                            431,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        413,
                        431
                    ],
                    "resource": "aws_lb_listener.http_listener",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": {},
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV2_AWS_42",
                    "bc_check_id": "BC_AWS_NETWORKING_79",
                    "check_name": "Ensure AWS CloudFront distribution uses custom SSL certificate",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution[0]": {
                                    "__end_line__": 696,
                                    "__start_line__": 636,
                                    "aliases": [
                                        "True"
                                    ],
                                    "comment": [
                                        "CloudFront for www."
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "S3-www."
                                            ],
                                            "viewer_protocol_policy": [
                                                "redirect-to-https"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.frontend_assets.bucket_regional_domain_name"
                                            ],
                                            "origin_id": [
                                                "S3-www."
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_100"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "restriction_type": [
                                                        "none"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "acm_certificate_arn": [
                                                "module.acm[0].acm_certificate_arn"
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.2_2021"
                                            ],
                                            "ssl_support_method": [
                                                "sni-only"
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_cloudfront_distribution.s3_distribution[0]",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "viewer_certificate/acm_certificate_arn",
                            "viewer_certificate/iam_certificate_id"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-cloudfront-distribution-uses-custom-ssl-certificate",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_56",
                    "bc_check_id": "BC_AWS_IAM_75",
                    "check_name": "Ensure AWS Managed IAMFullAccess IAM policy is not used.",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_iam_role": {
                                "ecs_task_execution_role": {
                                    "__end_line__": 299,
                                    "__start_line__": 286,
                                    "assume_role_policy": [
                                        {
                                            "Version": "2012-10-17",
                                            "Statement": [
                                                {
                                                    "Action": "sts:AssumeRole",
                                                    "Effect": "Allow",
                                                    "Principal": {
                                                        "Service": "ecs-tasks.amazonaws.com"
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "myapp-ecs-task-exec-role-dev"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_iam_role.ecs_task_execution_role",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "name",
                            "managed_policy_arns/*",
                            "policy_arn",
                            "arn",
                            "managed_policy_arn"
                        ]
                    },
                    "code_block": [
                        [
                            286,
                            "resource \"aws_iam_role\" \"ecs_task_execution_role\" {\n"
                        ],
                        [
                            287,
                            "  name = \"${var.project_name}-ecs-task-exec-role-${var.environment}\"\n"
                        ],
                        [
                            288,
                            "  assume_role_policy = jsonencode({\n"
                        ],
                        [
                            289,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            290,
                            "    Statement = [{\n"
                        ],
                        [
                            291,
                            "      Action = \"sts:AssumeRole\"\n"
                        ],
                        [
                            292,
                            "      Effect = \"Allow\"\n"
                        ],
                        [
                            293,
                            "      Principal = {\n"
                        ],
                        [
                            294,
                            "        Service = \"ecs-tasks.amazonaws.com\"\n"
                        ],
                        [
                            295,
                            "      }\n"
                        ],
                        [
                            296,
                            "    }]\n"
                        ],
                        [
                            297,
                            "  })\n"
                        ],
                        [
                            298,
                            "  tags = local.tags\n"
                        ],
                        [
                            299,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        286,
                        299
                    ],
                    "resource": "aws_iam_role.ecs_task_execution_role",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-56",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_56",
                    "bc_check_id": "BC_AWS_IAM_75",
                    "check_name": "Ensure AWS Managed IAMFullAccess IAM policy is not used.",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_iam_role_policy_attachment": {
                                "ecs_task_execution_role_policy": {
                                    "__end_line__": 304,
                                    "__start_line__": 301,
                                    "policy_arn": [
                                        "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
                                    ],
                                    "role": [
                                        "myapp-ecs-task-exec-role-dev"
                                    ],
                                    "__address__": "aws_iam_role_policy_attachment.ecs_task_execution_role_policy",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "name",
                            "managed_policy_arns/*",
                            "policy_arn",
                            "arn",
                            "managed_policy_arn"
                        ]
                    },
                    "code_block": [
                        [
                            301,
                            "resource \"aws_iam_role_policy_attachment\" \"ecs_task_execution_role_policy\" {\n"
                        ],
                        [
                            302,
                            "  role       = aws_iam_role.ecs_task_execution_role.name\n"
                        ],
                        [
                            303,
                            "  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy\"\n"
                        ],
                        [
                            304,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        301,
                        304
                    ],
                    "resource": "aws_iam_role_policy_attachment.ecs_task_execution_role_policy",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-56",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "role": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_56",
                    "bc_check_id": "BC_AWS_IAM_75",
                    "check_name": "Ensure AWS Managed IAMFullAccess IAM policy is not used.",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_iam_role": {
                                "ecs_task_role": {
                                    "__end_line__": 320,
                                    "__start_line__": 307,
                                    "assume_role_policy": [
                                        {
                                            "Version": "2012-10-17",
                                            "Statement": [
                                                {
                                                    "Action": "sts:AssumeRole",
                                                    "Effect": "Allow",
                                                    "Principal": {
                                                        "Service": "ecs-tasks.amazonaws.com"
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "myapp-ecs-task-role-dev"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_iam_role.ecs_task_role",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "name",
                            "managed_policy_arns/*",
                            "policy_arn",
                            "arn",
                            "managed_policy_arn"
                        ]
                    },
                    "code_block": [
                        [
                            307,
                            "resource \"aws_iam_role\" \"ecs_task_role\" {\n"
                        ],
                        [
                            308,
                            "  name = \"${var.project_name}-ecs-task-role-${var.environment}\"\n"
                        ],
                        [
                            309,
                            "  assume_role_policy = jsonencode({\n"
                        ],
                        [
                            310,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            311,
                            "    Statement = [{\n"
                        ],
                        [
                            312,
                            "      Action = \"sts:AssumeRole\"\n"
                        ],
                        [
                            313,
                            "      Effect = \"Allow\"\n"
                        ],
                        [
                            314,
                            "      Principal = {\n"
                        ],
                        [
                            315,
                            "        Service = \"ecs-tasks.amazonaws.com\"\n"
                        ],
                        [
                            316,
                            "      }\n"
                        ],
                        [
                            317,
                            "    }]\n"
                        ],
                        [
                            318,
                            "  })\n"
                        ],
                        [
                            319,
                            "  tags = local.tags\n"
                        ],
                        [
                            320,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        307,
                        320
                    ],
                    "resource": "aws_iam_role.ecs_task_role",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-56",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_56",
                    "bc_check_id": "BC_AWS_IAM_75",
                    "check_name": "Ensure AWS Managed IAMFullAccess IAM policy is not used.",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_iam_role_policy_attachment": {
                                "ecs_task_role_secrets_manager_access": {
                                    "__end_line__": 329,
                                    "__start_line__": 326,
                                    "policy_arn": [
                                        "arn:aws:iam::aws:policy/SecretsManagerReadWrite"
                                    ],
                                    "role": [
                                        "myapp-ecs-task-role-dev"
                                    ],
                                    "__address__": "aws_iam_role_policy_attachment.ecs_task_role_secrets_manager_access",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "name",
                            "managed_policy_arns/*",
                            "policy_arn",
                            "arn",
                            "managed_policy_arn"
                        ]
                    },
                    "code_block": [
                        [
                            326,
                            "resource \"aws_iam_role_policy_attachment\" \"ecs_task_role_secrets_manager_access\" {\n"
                        ],
                        [
                            327,
                            "  role       = aws_iam_role.ecs_task_role.name\n"
                        ],
                        [
                            328,
                            "  policy_arn = \"arn:aws:iam::aws:policy/SecretsManagerReadWrite\" # Or a more restrictive custom policy\n"
                        ],
                        [
                            329,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        326,
                        329
                    ],
                    "resource": "aws_iam_role_policy_attachment.ecs_task_role_secrets_manager_access",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-56",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "role": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_72",
                    "bc_check_id": "BC_AWS_NETWORKING_96",
                    "check_name": "Ensure AWS CloudFront origin protocol policy enforces HTTPS-only",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution[0]": {
                                    "__end_line__": 696,
                                    "__start_line__": 636,
                                    "aliases": [
                                        "True"
                                    ],
                                    "comment": [
                                        "CloudFront for www."
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "S3-www."
                                            ],
                                            "viewer_protocol_policy": [
                                                "redirect-to-https"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.frontend_assets.bucket_regional_domain_name"
                                            ],
                                            "origin_id": [
                                                "S3-www."
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_100"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "restriction_type": [
                                                        "none"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "acm_certificate_arn": [
                                                "module.acm[0].acm_certificate_arn"
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.2_2021"
                                            ],
                                            "ssl_support_method": [
                                                "sni-only"
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_cloudfront_distribution.s3_distribution[0]",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "origin[?(@/custom_origin_config/origin_protocol_policy != 'https-only')]/domain_name",
                            "origin/*/custom_origin_config",
                            "enabled"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-2-72",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_20",
                    "bc_check_id": "BC_AWS_S3_1",
                    "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "frontend_assets": {
                                    "__end_line__": 548,
                                    "__start_line__": 545,
                                    "bucket": [
                                        "www."
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.frontend_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "access_control_policy/grant/*/grantee/uri",
                            "access_control_policy/grant",
                            "access_control_policy",
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            545,
                            "resource \"aws_s3_bucket\" \"frontend_assets\" {\n"
                        ],
                        [
                            546,
                            "  bucket = local.frontend_s3_bucket_name\n"
                        ],
                        [
                            547,
                            "  tags   = local.tags\n"
                        ],
                        [
                            548,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        545,
                        548
                    ],
                    "resource": "aws_s3_bucket.frontend_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "bucket": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_103",
                    "bc_check_id": "BC_AWS_GENERAL_43",
                    "check_name": "Ensure that load balancer is using at least TLS 1.2",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_lb_listener": {
                                "http_listener": {
                                    "__end_line__": 431,
                                    "__start_line__": 413,
                                    "default_action": [
                                        {
                                            "redirect": [
                                                {
                                                    "port": [
                                                        "443"
                                                    ],
                                                    "protocol": [
                                                        "HTTPS"
                                                    ],
                                                    "status_code": [
                                                        "HTTP_301"
                                                    ]
                                                }
                                            ],
                                            "type": [
                                                "redirect"
                                            ]
                                        }
                                    ],
                                    "load_balancer_arn": [
                                        "aws_lb.main_alb.arn"
                                    ],
                                    "port": [
                                        80
                                    ],
                                    "protocol": [
                                        "HTTP"
                                    ],
                                    "__address__": "aws_lb_listener.http_listener",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "protocol",
                            "resource_type",
                            "default_action/type",
                            "default_action/redirect/protocol",
                            "load_balancer_type",
                            "ssl_policy"
                        ]
                    },
                    "code_block": [
                        [
                            413,
                            "resource \"aws_lb_listener\" \"http_listener\" {\n"
                        ],
                        [
                            414,
                            "  load_balancer_arn = aws_lb.main_alb.arn\n"
                        ],
                        [
                            415,
                            "  port              = 80\n"
                        ],
                        [
                            416,
                            "  protocol          = \"HTTP\"\n"
                        ],
                        [
                            417,
                            "\n"
                        ],
                        [
                            418,
                            "  default_action {\n"
                        ],
                        [
                            419,
                            "    type = \"redirect\"\n"
                        ],
                        [
                            420,
                            "    redirect {\n"
                        ],
                        [
                            421,
                            "      port        = \"443\"\n"
                        ],
                        [
                            422,
                            "      protocol    = \"HTTPS\"\n"
                        ],
                        [
                            423,
                            "      status_code = \"HTTP_301\"\n"
                        ],
                        [
                            424,
                            "    }\n"
                        ],
                        [
                            425,
                            "  }\n"
                        ],
                        [
                            426,
                            "  # If you don't have a domain/ACM cert yet, use forward to target group\n"
                        ],
                        [
                            427,
                            "  # default_action {\n"
                        ],
                        [
                            428,
                            "  #   type             = \"forward\"\n"
                        ],
                        [
                            429,
                            "  #   target_group_arn = aws_lb_target_group.app_tg.arn\n"
                        ],
                        [
                            430,
                            "  # }\n"
                        ],
                        [
                            431,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        413,
                        431
                    ],
                    "resource": "aws_lb_listener.http_listener",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-43",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV2_AWS_5",
                    "bc_check_id": "BC_AWS_NETWORKING_51",
                    "check_name": "Ensure that Security Groups are attached to another resource",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_security_group": {
                                "alb_sg": {
                                    "__end_line__": 219,
                                    "__start_line__": 195,
                                    "description": [
                                        "Allow HTTP/HTTPS traffic to ALB"
                                    ],
                                    "egress": [
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "0.0.0.0/0"
                                                ]
                                            ],
                                            "from_port": [
                                                0
                                            ],
                                            "protocol": [
                                                "-1"
                                            ],
                                            "to_port": [
                                                0
                                            ]
                                        }
                                    ],
                                    "ingress": [
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "0.0.0.0/0"
                                                ]
                                            ],
                                            "from_port": [
                                                80
                                            ],
                                            "protocol": [
                                                "tcp"
                                            ],
                                            "to_port": [
                                                80
                                            ]
                                        },
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "0.0.0.0/0"
                                                ]
                                            ],
                                            "from_port": [
                                                443
                                            ],
                                            "protocol": [
                                                "tcp"
                                            ],
                                            "to_port": [
                                                443
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "myapp-alb-sg-dev"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "vpc_id": [
                                        "module.vpc.vpc_id"
                                    ],
                                    "__address__": "aws_security_group.alb_sg",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "networking"
                        ]
                    },
                    "code_block": [
                        [
                            195,
                            "resource \"aws_security_group\" \"alb_sg\" {\n"
                        ],
                        [
                            196,
                            "  name        = \"${var.project_name}-alb-sg-${var.environment}\"\n"
                        ],
                        [
                            197,
                            "  description = \"Allow HTTP/HTTPS traffic to ALB\"\n"
                        ],
                        [
                            198,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            199,
                            "\n"
                        ],
                        [
                            200,
                            "  ingress {\n"
                        ],
                        [
                            201,
                            "    from_port   = 80\n"
                        ],
                        [
                            202,
                            "    to_port     = 80\n"
                        ],
                        [
                            203,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            204,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            205,
                            "  }\n"
                        ],
                        [
                            206,
                            "  ingress {\n"
                        ],
                        [
                            207,
                            "    from_port   = 443\n"
                        ],
                        [
                            208,
                            "    to_port     = 443\n"
                        ],
                        [
                            209,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            210,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            211,
                            "  }\n"
                        ],
                        [
                            212,
                            "  egress {\n"
                        ],
                        [
                            213,
                            "    from_port   = 0\n"
                        ],
                        [
                            214,
                            "    to_port     = 0\n"
                        ],
                        [
                            215,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            216,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            217,
                            "  }\n"
                        ],
                        [
                            218,
                            "  tags = local.tags\n"
                        ],
                        [
                            219,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        195,
                        219
                    ],
                    "resource": "aws_security_group.alb_sg",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_5",
                    "bc_check_id": "BC_AWS_NETWORKING_51",
                    "check_name": "Ensure that Security Groups are attached to another resource",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_security_group": {
                                "fargate_sg": {
                                    "__end_line__": 240,
                                    "__start_line__": 222,
                                    "description": [
                                        "Allow traffic from ALB to Fargate tasks"
                                    ],
                                    "egress": [
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "0.0.0.0/0"
                                                ]
                                            ],
                                            "from_port": [
                                                0
                                            ],
                                            "protocol": [
                                                "-1"
                                            ],
                                            "to_port": [
                                                0
                                            ]
                                        }
                                    ],
                                    "ingress": [
                                        {
                                            "from_port": [
                                                3000
                                            ],
                                            "protocol": [
                                                "tcp"
                                            ],
                                            "security_groups": [
                                                [
                                                    "aws_security_group.alb_sg.id"
                                                ]
                                            ],
                                            "to_port": [
                                                3000
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "myapp-fargate-sg-dev"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "vpc_id": [
                                        "module.vpc.vpc_id"
                                    ],
                                    "__address__": "aws_security_group.fargate_sg",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "networking"
                        ]
                    },
                    "code_block": [
                        [
                            222,
                            "resource \"aws_security_group\" \"fargate_sg\" {\n"
                        ],
                        [
                            223,
                            "  name        = \"${var.project_name}-fargate-sg-${var.environment}\"\n"
                        ],
                        [
                            224,
                            "  description = \"Allow traffic from ALB to Fargate tasks\"\n"
                        ],
                        [
                            225,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            226,
                            "\n"
                        ],
                        [
                            227,
                            "  ingress {\n"
                        ],
                        [
                            228,
                            "    from_port       = var.app_container_port\n"
                        ],
                        [
                            229,
                            "    to_port         = var.app_container_port\n"
                        ],
                        [
                            230,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            231,
                            "    security_groups = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            232,
                            "  }\n"
                        ],
                        [
                            233,
                            "  egress { # Allow outbound traffic to internet (e.g., external APIs, ECR, DocumentDB)\n"
                        ],
                        [
                            234,
                            "    from_port   = 0\n"
                        ],
                        [
                            235,
                            "    to_port     = 0\n"
                        ],
                        [
                            236,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            237,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            238,
                            "  }\n"
                        ],
                        [
                            239,
                            "  tags = local.tags\n"
                        ],
                        [
                            240,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        222,
                        240
                    ],
                    "resource": "aws_security_group.fargate_sg",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.from_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.to_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_5",
                    "bc_check_id": "BC_AWS_NETWORKING_51",
                    "check_name": "Ensure that Security Groups are attached to another resource",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_security_group": {
                                "docdb_sg": {
                                    "__end_line__": 261,
                                    "__start_line__": 243,
                                    "description": [
                                        "Allow traffic from Fargate tasks to DocumentDB"
                                    ],
                                    "egress": [
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "0.0.0.0/0"
                                                ]
                                            ],
                                            "from_port": [
                                                0
                                            ],
                                            "protocol": [
                                                "-1"
                                            ],
                                            "to_port": [
                                                0
                                            ]
                                        }
                                    ],
                                    "ingress": [
                                        {
                                            "from_port": [
                                                27017
                                            ],
                                            "protocol": [
                                                "tcp"
                                            ],
                                            "security_groups": [
                                                [
                                                    "aws_security_group.fargate_sg.id"
                                                ]
                                            ],
                                            "to_port": [
                                                27017
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "myapp-docdb-sg-dev"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "vpc_id": [
                                        "module.vpc.vpc_id"
                                    ],
                                    "__address__": "aws_security_group.docdb_sg",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "networking"
                        ]
                    },
                    "code_block": [
                        [
                            243,
                            "resource \"aws_security_group\" \"docdb_sg\" {\n"
                        ],
                        [
                            244,
                            "  name        = \"${var.project_name}-docdb-sg-${var.environment}\"\n"
                        ],
                        [
                            245,
                            "  description = \"Allow traffic from Fargate tasks to DocumentDB\"\n"
                        ],
                        [
                            246,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            247,
                            "\n"
                        ],
                        [
                            248,
                            "  ingress {\n"
                        ],
                        [
                            249,
                            "    from_port       = 27017 # Default MongoDB/DocumentDB port\n"
                        ],
                        [
                            250,
                            "    to_port         = 27017\n"
                        ],
                        [
                            251,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            252,
                            "    security_groups = [aws_security_group.fargate_sg.id]\n"
                        ],
                        [
                            253,
                            "  }\n"
                        ],
                        [
                            254,
                            "  egress { # Typically not needed for DB, but can be open if DB needs to reach out\n"
                        ],
                        [
                            255,
                            "    from_port   = 0\n"
                        ],
                        [
                            256,
                            "    to_port     = 0\n"
                        ],
                        [
                            257,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            258,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            259,
                            "  }\n"
                        ],
                        [
                            260,
                            "  tags = local.tags\n"
                        ],
                        [
                            261,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        243,
                        261
                    ],
                    "resource": "aws_security_group.docdb_sg",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_76",
                    "bc_check_id": null,
                    "check_name": "Ensure AWS ALB attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_lb": {
                                "main_alb": {
                                    "__end_line__": 391,
                                    "__start_line__": 382,
                                    "enable_deletion_protection": [
                                        false
                                    ],
                                    "internal": [
                                        false
                                    ],
                                    "load_balancer_type": [
                                        "application"
                                    ],
                                    "name": [
                                        "myapp-alb-dev"
                                    ],
                                    "security_groups": [
                                        [
                                            "aws_security_group.alb_sg.id"
                                        ]
                                    ],
                                    "subnets": [
                                        "module.vpc.public_subnets"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_lb.main_alb",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "rule/*/statement/managed_rule_group_statement/name",
                            "resource_type",
                            "internal"
                        ]
                    },
                    "code_block": [
                        [
                            382,
                            "resource \"aws_lb\" \"main_alb\" {\n"
                        ],
                        [
                            383,
                            "  name               = \"${var.project_name}-alb-${var.environment}\"\n"
                        ],
                        [
                            384,
                            "  internal           = false\n"
                        ],
                        [
                            385,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            386,
                            "  security_groups    = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            387,
                            "  subnets            = module.vpc.public_subnets\n"
                        ],
                        [
                            388,
                            "  enable_deletion_protection = false # Set to true for production\n"
                        ],
                        [
                            389,
                            "\n"
                        ],
                        [
                            390,
                            "  tags = local.tags\n"
                        ],
                        [
                            391,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        382,
                        391
                    ],
                    "resource": "aws_lb.main_alb",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": {},
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_20",
                    "bc_check_id": "BC_AWS_NETWORKING_49",
                    "check_name": "Ensure that ALB redirects HTTP requests into HTTPS ones",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_lb": {
                                "main_alb": {
                                    "__end_line__": 391,
                                    "__start_line__": 382,
                                    "enable_deletion_protection": [
                                        false
                                    ],
                                    "internal": [
                                        false
                                    ],
                                    "load_balancer_type": [
                                        "application"
                                    ],
                                    "name": [
                                        "myapp-alb-dev"
                                    ],
                                    "security_groups": [
                                        [
                                            "aws_security_group.alb_sg.id"
                                        ]
                                    ],
                                    "subnets": [
                                        "module.vpc.public_subnets"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_lb.main_alb",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "default_action/redirect/*/protocol",
                            "protocol",
                            "resource_type",
                            "default_action/type",
                            "port",
                            "default_action/redirect/*/port"
                        ]
                    },
                    "code_block": [
                        [
                            382,
                            "resource \"aws_lb\" \"main_alb\" {\n"
                        ],
                        [
                            383,
                            "  name               = \"${var.project_name}-alb-${var.environment}\"\n"
                        ],
                        [
                            384,
                            "  internal           = false\n"
                        ],
                        [
                            385,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            386,
                            "  security_groups    = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            387,
                            "  subnets            = module.vpc.public_subnets\n"
                        ],
                        [
                            388,
                            "  enable_deletion_protection = false # Set to true for production\n"
                        ],
                        [
                            389,
                            "\n"
                        ],
                        [
                            390,
                            "  tags = local.tags\n"
                        ],
                        [
                            391,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        382,
                        391
                    ],
                    "resource": "aws_lb.main_alb",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-alb-redirects-http-requests-into-https-ones",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_57",
                    "bc_check_id": "BC_AWS_S3_2",
                    "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "frontend_assets": {
                                    "__end_line__": 548,
                                    "__start_line__": 545,
                                    "bucket": [
                                        "www."
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.frontend_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "access_control_policy/grant/*/grantee/uri",
                            "access_control_policy/grant",
                            "access_control_policy",
                            "access_control_policy/grant/*/permission",
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            545,
                            "resource \"aws_s3_bucket\" \"frontend_assets\" {\n"
                        ],
                        [
                            546,
                            "  bucket = local.frontend_s3_bucket_name\n"
                        ],
                        [
                            547,
                            "  tags   = local.tags\n"
                        ],
                        [
                            548,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        545,
                        548
                    ],
                    "resource": "aws_s3_bucket.frontend_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "bucket": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_378",
                    "bc_check_id": "BC_AWS_NETWORKING_103",
                    "check_name": "Ensure AWS Load Balancer doesn't use HTTP protocol",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_lb_target_group": {
                                "app_tg": {
                                    "__end_line__": 411,
                                    "__start_line__": 393,
                                    "health_check": [
                                        {
                                            "enabled": [
                                                true
                                            ],
                                            "healthy_threshold": [
                                                2
                                            ],
                                            "interval": [
                                                30
                                            ],
                                            "matcher": [
                                                "200-399"
                                            ],
                                            "path": [
                                                "/"
                                            ],
                                            "protocol": [
                                                "HTTP"
                                            ],
                                            "timeout": [
                                                5
                                            ],
                                            "unhealthy_threshold": [
                                                2
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "myapp-tg-dev"
                                    ],
                                    "port": [
                                        3000
                                    ],
                                    "protocol": [
                                        "HTTP"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "target_type": [
                                        "ip"
                                    ],
                                    "vpc_id": [
                                        "module.vpc.vpc_id"
                                    ],
                                    "__address__": "aws_lb_target_group.app_tg",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "protocol",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            393,
                            "resource \"aws_lb_target_group\" \"app_tg\" {\n"
                        ],
                        [
                            394,
                            "  name        = \"${var.project_name}-tg-${var.environment}\"\n"
                        ],
                        [
                            395,
                            "  port        = var.app_container_port\n"
                        ],
                        [
                            396,
                            "  protocol    = \"HTTP\"\n"
                        ],
                        [
                            397,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            398,
                            "  target_type = \"ip\" # Required for Fargate\n"
                        ],
                        [
                            399,
                            "\n"
                        ],
                        [
                            400,
                            "  health_check {\n"
                        ],
                        [
                            401,
                            "    enabled             = true\n"
                        ],
                        [
                            402,
                            "    path                = \"/\" # Adjust to your application's health check endpoint\n"
                        ],
                        [
                            403,
                            "    protocol            = \"HTTP\"\n"
                        ],
                        [
                            404,
                            "    matcher             = \"200-399\"\n"
                        ],
                        [
                            405,
                            "    interval            = 30\n"
                        ],
                        [
                            406,
                            "    timeout             = 5\n"
                        ],
                        [
                            407,
                            "    healthy_threshold   = 2\n"
                        ],
                        [
                            408,
                            "    unhealthy_threshold = 2\n"
                        ],
                        [
                            409,
                            "  }\n"
                        ],
                        [
                            410,
                            "  tags = local.tags\n"
                        ],
                        [
                            411,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        393,
                        411
                    ],
                    "resource": "aws_lb_target_group.app_tg",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-378",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_19",
                    "bc_check_id": "BC_AWS_S3_14",
                    "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "frontend_assets": {
                                    "__end_line__": 548,
                                    "__start_line__": 545,
                                    "bucket": [
                                        "www."
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.frontend_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "server_side_encryption_configuration/rule/apply_server_side_encryption_by_default/sse_algorithm",
                            "resource_type",
                            "rule/apply_server_side_encryption_by_default/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            545,
                            "resource \"aws_s3_bucket\" \"frontend_assets\" {\n"
                        ],
                        [
                            546,
                            "  bucket = local.frontend_s3_bucket_name\n"
                        ],
                        [
                            547,
                            "  tags   = local.tags\n"
                        ],
                        [
                            548,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        545,
                        548
                    ],
                    "resource": "aws_s3_bucket.frontend_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "bucket": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_54",
                    "bc_check_id": "BC_AWS_NETWORKING_84",
                    "check_name": "Ensure AWS CloudFront distribution is using secure SSL protocols for HTTPS communication",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution[0]": {
                                    "__end_line__": 696,
                                    "__start_line__": 636,
                                    "aliases": [
                                        "True"
                                    ],
                                    "comment": [
                                        "CloudFront for www."
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "S3-www."
                                            ],
                                            "viewer_protocol_policy": [
                                                "redirect-to-https"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.frontend_assets.bucket_regional_domain_name"
                                            ],
                                            "origin_id": [
                                                "S3-www."
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_100"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "restriction_type": [
                                                        "none"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "acm_certificate_arn": [
                                                "module.acm[0].acm_certificate_arn"
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.2_2021"
                                            ],
                                            "ssl_support_method": [
                                                "sni-only"
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_cloudfront_distribution.s3_distribution[0]",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "origin/*/custom_origin_config/origin_ssl_protocols"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-2-54",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_23",
                    "bc_check_id": "BC_AWS_GENERAL_95",
                    "check_name": "Route53 A Record has Attached Resource",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_route53_record": {
                                "api_dns[0]": {
                                    "__end_line__": 719,
                                    "__start_line__": 708,
                                    "alias": [
                                        {
                                            "name": [
                                                "aws_lb.main_alb.dns_name"
                                            ],
                                            "zone_id": [
                                                "aws_lb.main_alb.zone_id"
                                            ],
                                            "evaluate_target_health": [
                                                true
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "api."
                                    ],
                                    "type": [
                                        "A"
                                    ],
                                    "zone_id": [
                                        "data.aws_route53_zone.selected[0].zone_id"
                                    ],
                                    "__address__": "aws_route53_record.api_dns[0]",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "alias/name",
                            "type",
                            "resource_type",
                            "networking"
                        ]
                    },
                    "code_block": [
                        [
                            708,
                            "resource \"aws_route53_record\" \"api_dns\" {\n"
                        ],
                        [
                            709,
                            "  count   = var.domain_name != \"\" ? 1 : 0\n"
                        ],
                        [
                            710,
                            "  zone_id = data.aws_route53_zone.selected[0].zone_id\n"
                        ],
                        [
                            711,
                            "  name    = \"${var.api_subdomain}.${var.domain_name}\" # e.g., api.example.com\n"
                        ],
                        [
                            712,
                            "  type    = \"A\"\n"
                        ],
                        [
                            713,
                            "\n"
                        ],
                        [
                            714,
                            "  alias {\n"
                        ],
                        [
                            715,
                            "    name                   = aws_lb.main_alb.dns_name\n"
                        ],
                        [
                            716,
                            "    zone_id                = aws_lb.main_alb.zone_id\n"
                        ],
                        [
                            717,
                            "    evaluate_target_health = true\n"
                        ],
                        [
                            718,
                            "  }\n"
                        ],
                        [
                            719,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        708,
                        719
                    ],
                    "resource": "aws_route53_record.api_dns[0]",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-route53-a-record-has-an-attached-resource",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "variable",
                                "name": "api_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                }
            ],
            "failed_checks": [
                {
                    "check_id": "CKV_TF_1",
                    "bc_check_id": "BC_CROSS_1",
                    "check_name": "Ensure Terraform module sources use a commit hash",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            162,
                            "module \"vpc\" {\n"
                        ],
                        [
                            163,
                            "  source  = \"terraform-aws-modules/vpc/aws\"\n"
                        ],
                        [
                            164,
                            "  version = \"5.5.1\" # Use a recent, stable version\n"
                        ],
                        [
                            165,
                            "\n"
                        ],
                        [
                            166,
                            "  name = \"${var.project_name}-vpc-${var.environment}\"\n"
                        ],
                        [
                            167,
                            "  cidr = var.vpc_cidr_block\n"
                        ],
                        [
                            168,
                            "\n"
                        ],
                        [
                            169,
                            "  azs             = var.availability_zones\n"
                        ],
                        [
                            170,
                            "  public_subnets  = var.public_subnet_cidrs\n"
                        ],
                        [
                            171,
                            "  private_subnets = var.private_subnet_cidrs\n"
                        ],
                        [
                            172,
                            "\n"
                        ],
                        [
                            173,
                            "  enable_nat_gateway     = true\n"
                        ],
                        [
                            174,
                            "  single_nat_gateway     = false # Set to true for cost saving in dev, false for HA\n"
                        ],
                        [
                            175,
                            "  one_nat_gateway_per_az = true  # For HA\n"
                        ],
                        [
                            176,
                            "\n"
                        ],
                        [
                            177,
                            "  enable_dns_hostnames = true\n"
                        ],
                        [
                            178,
                            "  enable_dns_support   = true\n"
                        ],
                        [
                            179,
                            "\n"
                        ],
                        [
                            180,
                            "  tags = local.tags\n"
                        ],
                        [
                            181,
                            "\n"
                        ],
                        [
                            182,
                            "  public_subnet_tags = {\n"
                        ],
                        [
                            183,
                            "    \"kubernetes.io/role/elb\" = \"1\" # For ALB auto-discovery if using Kubernetes later\n"
                        ],
                        [
                            184,
                            "  }\n"
                        ],
                        [
                            185,
                            "  private_subnet_tags = {\n"
                        ],
                        [
                            186,
                            "    \"kubernetes.io/role/internal-elb\" = \"1\"\n"
                        ],
                        [
                            187,
                            "  }\n"
                        ],
                        [
                            188,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        162,
                        188
                    ],
                    "resource": "vpc",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.module.generic.RevisionHash",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/supply-chain-policies/terraform-policies/ensure-terraform-module-sources-use-git-url-with-commit-hash-revision",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "cidr": [
                            {
                                "type": "variable",
                                "name": "vpc_cidr_block",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "public_subnets": [
                            {
                                "type": "variable",
                                "name": "public_subnet_cidrs",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "private_subnets": [
                            {
                                "type": "variable",
                                "name": "private_subnet_cidrs",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "azs": [
                            {
                                "type": "variable",
                                "name": "availability_zones",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_TF_1",
                    "bc_check_id": "BC_CROSS_1",
                    "check_name": "Ensure Terraform module sources use a commit hash",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            614,
                            "module \"acm\" {\n"
                        ],
                        [
                            615,
                            "  source  = \"terraform-aws-modules/acm/aws\"\n"
                        ],
                        [
                            616,
                            "  version = \"~> 4.0\" # Check for latest stable version\n"
                        ],
                        [
                            617,
                            "\n"
                        ],
                        [
                            618,
                            "  # Only create if domain_name is provided\n"
                        ],
                        [
                            619,
                            "  # This will attempt to create a certificate and validate it via DNS (if Route 53 zone is managed by AWS)\n"
                        ],
                        [
                            620,
                            "  # or email validation. For DNS validation to work automatically, Route 53 zone must exist.\n"
                        ],
                        [
                            621,
                            "  count = var.domain_name != \"\" ? 1 : 0\n"
                        ],
                        [
                            622,
                            "\n"
                        ],
                        [
                            623,
                            "  domain_name = var.domain_name # e.g., example.com\n"
                        ],
                        [
                            624,
                            "  zone_id     = var.domain_name != \"\" ? data.aws_route53_zone.selected[0].zone_id : null\n"
                        ],
                        [
                            625,
                            "\n"
                        ],
                        [
                            626,
                            "  subject_alternative_names = [\n"
                        ],
                        [
                            627,
                            "    var.domain_name != \"\" ? \"*.${var.domain_name}\" : \"\", # Wildcard for subdomains like www, api\n"
                        ],
                        [
                            628,
                            "    var.domain_name != \"\" ? \"${var.api_subdomain}.${var.domain_name}\" : \"\",\n"
                        ],
                        [
                            629,
                            "    var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"\n"
                        ],
                        [
                            630,
                            "  ]\n"
                        ],
                        [
                            631,
                            "  wait_for_validation = true # Can take time\n"
                        ],
                        [
                            632,
                            "\n"
                        ],
                        [
                            633,
                            "  tags = local.tags\n"
                        ],
                        [
                            634,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        614,
                        634
                    ],
                    "resource": "acm",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.module.generic.RevisionHash",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/supply-chain-policies/terraform-policies/ensure-terraform-module-sources-use-git-url-with-commit-hash-revision",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "count": [
                            {
                                "type": "variable",
                                "name": "domain_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "domain_name": [
                            {
                                "type": "variable",
                                "name": "domain_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "subject_alternative_names": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "zone_id": [
                            {
                                "type": "variable",
                                "name": "domain_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_260",
                    "bc_check_id": "BC_AWS_NETWORKING_67",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ingress/[0]/from_port",
                            "ingress/[0]/to_port",
                            "ingress/[0]/cidr_blocks",
                            "ingress/[0]/ipv6_cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            195,
                            "resource \"aws_security_group\" \"alb_sg\" {\n"
                        ],
                        [
                            196,
                            "  name        = \"${var.project_name}-alb-sg-${var.environment}\"\n"
                        ],
                        [
                            197,
                            "  description = \"Allow HTTP/HTTPS traffic to ALB\"\n"
                        ],
                        [
                            198,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            199,
                            "\n"
                        ],
                        [
                            200,
                            "  ingress {\n"
                        ],
                        [
                            201,
                            "    from_port   = 80\n"
                        ],
                        [
                            202,
                            "    to_port     = 80\n"
                        ],
                        [
                            203,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            204,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            205,
                            "  }\n"
                        ],
                        [
                            206,
                            "  ingress {\n"
                        ],
                        [
                            207,
                            "    from_port   = 443\n"
                        ],
                        [
                            208,
                            "    to_port     = 443\n"
                        ],
                        [
                            209,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            210,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            211,
                            "  }\n"
                        ],
                        [
                            212,
                            "  egress {\n"
                        ],
                        [
                            213,
                            "    from_port   = 0\n"
                        ],
                        [
                            214,
                            "    to_port     = 0\n"
                        ],
                        [
                            215,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            216,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            217,
                            "  }\n"
                        ],
                        [
                            218,
                            "  tags = local.tags\n"
                        ],
                        [
                            219,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        195,
                        219
                    ],
                    "resource": "aws_security_group.alb_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security group and rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "description",
                            "egress/[0]",
                            "ingress/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            195,
                            "resource \"aws_security_group\" \"alb_sg\" {\n"
                        ],
                        [
                            196,
                            "  name        = \"${var.project_name}-alb-sg-${var.environment}\"\n"
                        ],
                        [
                            197,
                            "  description = \"Allow HTTP/HTTPS traffic to ALB\"\n"
                        ],
                        [
                            198,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            199,
                            "\n"
                        ],
                        [
                            200,
                            "  ingress {\n"
                        ],
                        [
                            201,
                            "    from_port   = 80\n"
                        ],
                        [
                            202,
                            "    to_port     = 80\n"
                        ],
                        [
                            203,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            204,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            205,
                            "  }\n"
                        ],
                        [
                            206,
                            "  ingress {\n"
                        ],
                        [
                            207,
                            "    from_port   = 443\n"
                        ],
                        [
                            208,
                            "    to_port     = 443\n"
                        ],
                        [
                            209,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            210,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            211,
                            "  }\n"
                        ],
                        [
                            212,
                            "  egress {\n"
                        ],
                        [
                            213,
                            "    from_port   = 0\n"
                        ],
                        [
                            214,
                            "    to_port     = 0\n"
                        ],
                        [
                            215,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            216,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            217,
                            "  }\n"
                        ],
                        [
                            218,
                            "  tags = local.tags\n"
                        ],
                        [
                            219,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        195,
                        219
                    ],
                    "resource": "aws_security_group.alb_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_382",
                    "bc_check_id": "BC_AWS_IAM_93",
                    "check_name": "Ensure no security groups allow egress from 0.0.0.0:0 to port -1",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "egress/[0]/from_port",
                            "egress/[0]/to_port",
                            "egress/[0]/cidr_blocks",
                            "egress/[0]/ipv6_cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            195,
                            "resource \"aws_security_group\" \"alb_sg\" {\n"
                        ],
                        [
                            196,
                            "  name        = \"${var.project_name}-alb-sg-${var.environment}\"\n"
                        ],
                        [
                            197,
                            "  description = \"Allow HTTP/HTTPS traffic to ALB\"\n"
                        ],
                        [
                            198,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            199,
                            "\n"
                        ],
                        [
                            200,
                            "  ingress {\n"
                        ],
                        [
                            201,
                            "    from_port   = 80\n"
                        ],
                        [
                            202,
                            "    to_port     = 80\n"
                        ],
                        [
                            203,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            204,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            205,
                            "  }\n"
                        ],
                        [
                            206,
                            "  ingress {\n"
                        ],
                        [
                            207,
                            "    from_port   = 443\n"
                        ],
                        [
                            208,
                            "    to_port     = 443\n"
                        ],
                        [
                            209,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            210,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            211,
                            "  }\n"
                        ],
                        [
                            212,
                            "  egress {\n"
                        ],
                        [
                            213,
                            "    from_port   = 0\n"
                        ],
                        [
                            214,
                            "    to_port     = 0\n"
                        ],
                        [
                            215,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            216,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            217,
                            "  }\n"
                        ],
                        [
                            218,
                            "  tags = local.tags\n"
                        ],
                        [
                            219,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        195,
                        219
                    ],
                    "resource": "aws_security_group.alb_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedEgressAny",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security group and rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "description",
                            "egress/[0]",
                            "ingress/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            222,
                            "resource \"aws_security_group\" \"fargate_sg\" {\n"
                        ],
                        [
                            223,
                            "  name        = \"${var.project_name}-fargate-sg-${var.environment}\"\n"
                        ],
                        [
                            224,
                            "  description = \"Allow traffic from ALB to Fargate tasks\"\n"
                        ],
                        [
                            225,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            226,
                            "\n"
                        ],
                        [
                            227,
                            "  ingress {\n"
                        ],
                        [
                            228,
                            "    from_port       = var.app_container_port\n"
                        ],
                        [
                            229,
                            "    to_port         = var.app_container_port\n"
                        ],
                        [
                            230,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            231,
                            "    security_groups = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            232,
                            "  }\n"
                        ],
                        [
                            233,
                            "  egress { # Allow outbound traffic to internet (e.g., external APIs, ECR, DocumentDB)\n"
                        ],
                        [
                            234,
                            "    from_port   = 0\n"
                        ],
                        [
                            235,
                            "    to_port     = 0\n"
                        ],
                        [
                            236,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            237,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            238,
                            "  }\n"
                        ],
                        [
                            239,
                            "  tags = local.tags\n"
                        ],
                        [
                            240,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        222,
                        240
                    ],
                    "resource": "aws_security_group.fargate_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.from_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.to_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_382",
                    "bc_check_id": "BC_AWS_IAM_93",
                    "check_name": "Ensure no security groups allow egress from 0.0.0.0:0 to port -1",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "egress/[0]/from_port",
                            "egress/[0]/to_port",
                            "egress/[0]/cidr_blocks",
                            "egress/[0]/ipv6_cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            222,
                            "resource \"aws_security_group\" \"fargate_sg\" {\n"
                        ],
                        [
                            223,
                            "  name        = \"${var.project_name}-fargate-sg-${var.environment}\"\n"
                        ],
                        [
                            224,
                            "  description = \"Allow traffic from ALB to Fargate tasks\"\n"
                        ],
                        [
                            225,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            226,
                            "\n"
                        ],
                        [
                            227,
                            "  ingress {\n"
                        ],
                        [
                            228,
                            "    from_port       = var.app_container_port\n"
                        ],
                        [
                            229,
                            "    to_port         = var.app_container_port\n"
                        ],
                        [
                            230,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            231,
                            "    security_groups = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            232,
                            "  }\n"
                        ],
                        [
                            233,
                            "  egress { # Allow outbound traffic to internet (e.g., external APIs, ECR, DocumentDB)\n"
                        ],
                        [
                            234,
                            "    from_port   = 0\n"
                        ],
                        [
                            235,
                            "    to_port     = 0\n"
                        ],
                        [
                            236,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            237,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            238,
                            "  }\n"
                        ],
                        [
                            239,
                            "  tags = local.tags\n"
                        ],
                        [
                            240,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        222,
                        240
                    ],
                    "resource": "aws_security_group.fargate_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedEgressAny",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.from_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.to_port": [
                            {
                                "type": "variable",
                                "name": "app_container_port",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security group and rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "description",
                            "egress/[0]",
                            "ingress/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            243,
                            "resource \"aws_security_group\" \"docdb_sg\" {\n"
                        ],
                        [
                            244,
                            "  name        = \"${var.project_name}-docdb-sg-${var.environment}\"\n"
                        ],
                        [
                            245,
                            "  description = \"Allow traffic from Fargate tasks to DocumentDB\"\n"
                        ],
                        [
                            246,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            247,
                            "\n"
                        ],
                        [
                            248,
                            "  ingress {\n"
                        ],
                        [
                            249,
                            "    from_port       = 27017 # Default MongoDB/DocumentDB port\n"
                        ],
                        [
                            250,
                            "    to_port         = 27017\n"
                        ],
                        [
                            251,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            252,
                            "    security_groups = [aws_security_group.fargate_sg.id]\n"
                        ],
                        [
                            253,
                            "  }\n"
                        ],
                        [
                            254,
                            "  egress { # Typically not needed for DB, but can be open if DB needs to reach out\n"
                        ],
                        [
                            255,
                            "    from_port   = 0\n"
                        ],
                        [
                            256,
                            "    to_port     = 0\n"
                        ],
                        [
                            257,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            258,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            259,
                            "  }\n"
                        ],
                        [
                            260,
                            "  tags = local.tags\n"
                        ],
                        [
                            261,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        243,
                        261
                    ],
                    "resource": "aws_security_group.docdb_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_382",
                    "bc_check_id": "BC_AWS_IAM_93",
                    "check_name": "Ensure no security groups allow egress from 0.0.0.0:0 to port -1",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "egress/[0]/from_port",
                            "egress/[0]/to_port",
                            "egress/[0]/cidr_blocks",
                            "egress/[0]/ipv6_cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            243,
                            "resource \"aws_security_group\" \"docdb_sg\" {\n"
                        ],
                        [
                            244,
                            "  name        = \"${var.project_name}-docdb-sg-${var.environment}\"\n"
                        ],
                        [
                            245,
                            "  description = \"Allow traffic from Fargate tasks to DocumentDB\"\n"
                        ],
                        [
                            246,
                            "  vpc_id      = module.vpc.vpc_id\n"
                        ],
                        [
                            247,
                            "\n"
                        ],
                        [
                            248,
                            "  ingress {\n"
                        ],
                        [
                            249,
                            "    from_port       = 27017 # Default MongoDB/DocumentDB port\n"
                        ],
                        [
                            250,
                            "    to_port         = 27017\n"
                        ],
                        [
                            251,
                            "    protocol        = \"tcp\"\n"
                        ],
                        [
                            252,
                            "    security_groups = [aws_security_group.fargate_sg.id]\n"
                        ],
                        [
                            253,
                            "  }\n"
                        ],
                        [
                            254,
                            "  egress { # Typically not needed for DB, but can be open if DB needs to reach out\n"
                        ],
                        [
                            255,
                            "    from_port   = 0\n"
                        ],
                        [
                            256,
                            "    to_port     = 0\n"
                        ],
                        [
                            257,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            258,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            259,
                            "  }\n"
                        ],
                        [
                            260,
                            "  tags = local.tags\n"
                        ],
                        [
                            261,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        243,
                        261
                    ],
                    "resource": "aws_security_group.docdb_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedEgressAny",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_136",
                    "bc_check_id": "BC_AWS_GENERAL_53",
                    "check_name": "Ensure that ECR repositories are encrypted using KMS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encryption_configuration/[0]/encryption_type"
                        ]
                    },
                    "code_block": [
                        [
                            266,
                            "resource \"aws_ecr_repository\" \"app_ecr_repo\" {\n"
                        ],
                        [
                            267,
                            "  name                 = \"${var.project_name}-backend-${var.environment}\"\n"
                        ],
                        [
                            268,
                            "  image_tag_mutability = \"MUTABLE\" # Or IMMUTABLE for stricter versioning\n"
                        ],
                        [
                            269,
                            "\n"
                        ],
                        [
                            270,
                            "  image_scanning_configuration {\n"
                        ],
                        [
                            271,
                            "    scan_on_push = true\n"
                        ],
                        [
                            272,
                            "  }\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  tags = local.tags\n"
                        ],
                        [
                            275,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        266,
                        275
                    ],
                    "resource": "aws_ecr_repository.app_ecr_repo",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRRepositoryEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ecr-repositories-are-encrypted",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_51",
                    "bc_check_id": "BC_AWS_GENERAL_24",
                    "check_name": "Ensure ECR Image Tags are immutable",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "image_tag_mutability"
                        ]
                    },
                    "code_block": [
                        [
                            266,
                            "resource \"aws_ecr_repository\" \"app_ecr_repo\" {\n"
                        ],
                        [
                            267,
                            "  name                 = \"${var.project_name}-backend-${var.environment}\"\n"
                        ],
                        [
                            268,
                            "  image_tag_mutability = \"MUTABLE\" # Or IMMUTABLE for stricter versioning\n"
                        ],
                        [
                            269,
                            "\n"
                        ],
                        [
                            270,
                            "  image_scanning_configuration {\n"
                        ],
                        [
                            271,
                            "    scan_on_push = true\n"
                        ],
                        [
                            272,
                            "  }\n"
                        ],
                        [
                            273,
                            "\n"
                        ],
                        [
                            274,
                            "  tags = local.tags\n"
                        ],
                        [
                            275,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        266,
                        275
                    ],
                    "resource": "aws_ecr_repository.app_ecr_repo",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRImmutableTags",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-24",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_65",
                    "bc_check_id": "BC_AWS_LOGGING_11",
                    "check_name": "Ensure container insights are enabled on ECS cluster",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            280,
                            "resource \"aws_ecs_cluster\" \"main_cluster\" {\n"
                        ],
                        [
                            281,
                            "  name = \"${var.project_name}-cluster-${var.environment}\"\n"
                        ],
                        [
                            282,
                            "  tags = local.tags\n"
                        ],
                        [
                            283,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        280,
                        283
                    ],
                    "resource": "aws_ecs_cluster.main_cluster",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECSClusterContainerInsights",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-logging-11",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_158",
                    "bc_check_id": "BC_AWS_GENERAL_85",
                    "check_name": "Ensure that CloudWatch Log Group is encrypted by KMS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            332,
                            "resource \"aws_cloudwatch_log_group\" \"app_logs\" {\n"
                        ],
                        [
                            333,
                            "  name              = \"/ecs/${var.project_name}-backend-${var.environment}\"\n"
                        ],
                        [
                            334,
                            "  retention_in_days = 30 # Adjust as needed\n"
                        ],
                        [
                            335,
                            "  tags              = local.tags\n"
                        ],
                        [
                            336,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        332,
                        336
                    ],
                    "resource": "aws_cloudwatch_log_group.app_logs",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudWatchLogGroupKMSKey",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-cloudwatch-log-group-is-encrypted-by-kms",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_338",
                    "bc_check_id": "BC_AWS_LOGGING_46",
                    "check_name": "Ensure CloudWatch log groups retains logs for at least 1 year",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "retention_in_days"
                        ]
                    },
                    "code_block": [
                        [
                            332,
                            "resource \"aws_cloudwatch_log_group\" \"app_logs\" {\n"
                        ],
                        [
                            333,
                            "  name              = \"/ecs/${var.project_name}-backend-${var.environment}\"\n"
                        ],
                        [
                            334,
                            "  retention_in_days = 30 # Adjust as needed\n"
                        ],
                        [
                            335,
                            "  tags              = local.tags\n"
                        ],
                        [
                            336,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        332,
                        336
                    ],
                    "resource": "aws_cloudwatch_log_group.app_logs",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudWatchLogGroupRetentionYear",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-338",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_91",
                    "bc_check_id": "BC_AWS_LOGGING_22",
                    "check_name": "Ensure the ELBv2 (Application/Network) has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_logs/0/enabled/0"
                        ]
                    },
                    "code_block": [
                        [
                            382,
                            "resource \"aws_lb\" \"main_alb\" {\n"
                        ],
                        [
                            383,
                            "  name               = \"${var.project_name}-alb-${var.environment}\"\n"
                        ],
                        [
                            384,
                            "  internal           = false\n"
                        ],
                        [
                            385,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            386,
                            "  security_groups    = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            387,
                            "  subnets            = module.vpc.public_subnets\n"
                        ],
                        [
                            388,
                            "  enable_deletion_protection = false # Set to true for production\n"
                        ],
                        [
                            389,
                            "\n"
                        ],
                        [
                            390,
                            "  tags = local.tags\n"
                        ],
                        [
                            391,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        382,
                        391
                    ],
                    "resource": "aws_lb.main_alb",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBv2AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-logging-22",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_150",
                    "bc_check_id": "BC_AWS_NETWORKING_62",
                    "check_name": "Ensure that Load Balancer has deletion protection enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_deletion_protection"
                        ]
                    },
                    "code_block": [
                        [
                            382,
                            "resource \"aws_lb\" \"main_alb\" {\n"
                        ],
                        [
                            383,
                            "  name               = \"${var.project_name}-alb-${var.environment}\"\n"
                        ],
                        [
                            384,
                            "  internal           = false\n"
                        ],
                        [
                            385,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            386,
                            "  security_groups    = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            387,
                            "  subnets            = module.vpc.public_subnets\n"
                        ],
                        [
                            388,
                            "  enable_deletion_protection = false # Set to true for production\n"
                        ],
                        [
                            389,
                            "\n"
                        ],
                        [
                            390,
                            "  tags = local.tags\n"
                        ],
                        [
                            391,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        382,
                        391
                    ],
                    "resource": "aws_lb.main_alb",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LBDeletionProtection",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-150",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_131",
                    "bc_check_id": "BC_AWS_NETWORKING_41",
                    "check_name": "Ensure that ALB drops HTTP headers",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "drop_invalid_header_fields"
                        ]
                    },
                    "code_block": [
                        [
                            382,
                            "resource \"aws_lb\" \"main_alb\" {\n"
                        ],
                        [
                            383,
                            "  name               = \"${var.project_name}-alb-${var.environment}\"\n"
                        ],
                        [
                            384,
                            "  internal           = false\n"
                        ],
                        [
                            385,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            386,
                            "  security_groups    = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            387,
                            "  subnets            = module.vpc.public_subnets\n"
                        ],
                        [
                            388,
                            "  enable_deletion_protection = false # Set to true for production\n"
                        ],
                        [
                            389,
                            "\n"
                        ],
                        [
                            390,
                            "  tags = local.tags\n"
                        ],
                        [
                            391,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        382,
                        391
                    ],
                    "resource": "aws_lb.main_alb",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ALBDropHttpHeaders",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-alb-drops-http-headers",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_149",
                    "bc_check_id": "BC_AWS_GENERAL_79",
                    "check_name": "Ensure that Secrets Manager secret is encrypted using KMS CMK",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            492,
                            "resource \"aws_secretsmanager_secret\" \"docdb_credentials\" {\n"
                        ],
                        [
                            493,
                            "  name        = \"${var.project_name}-docdb-credentials-${var.environment}\"\n"
                        ],
                        [
                            494,
                            "  description = \"DocumentDB master credentials\"\n"
                        ],
                        [
                            495,
                            "  tags        = local.tags\n"
                        ],
                        [
                            496,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        492,
                        496
                    ],
                    "resource": "aws_secretsmanager_secret.docdb_credentials",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecretManagerSecretEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-secrets-manager-secret-is-encrypted-using-kms",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_360",
                    "bc_check_id": "BC_AWS_GENERAL_256",
                    "check_name": "Ensure DocumentDB has an adequate backup retention period",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "backup_retention_period"
                        ]
                    },
                    "code_block": [
                        [
                            516,
                            "resource \"aws_docdb_cluster\" \"main_docdb_cluster\" {\n"
                        ],
                        [
                            517,
                            "  cluster_identifier      = \"${var.project_name}-docdb-cluster-${var.environment}\"\n"
                        ],
                        [
                            518,
                            "  engine                  = \"docdb\"\n"
                        ],
                        [
                            519,
                            "  master_username         = local.docdb_master_username\n"
                        ],
                        [
                            520,
                            "  master_password         = random_password.docdb_master_password.result\n"
                        ],
                        [
                            521,
                            "  db_subnet_group_name    = aws_docdb_subnet_group.main_docdb_subnet_group.name\n"
                        ],
                        [
                            522,
                            "  vpc_security_group_ids  = [aws_security_group.docdb_sg.id]\n"
                        ],
                        [
                            523,
                            "  skip_final_snapshot     = var.environment != \"prod\" # Set to false for prod\n"
                        ],
                        [
                            524,
                            "  backup_retention_period = var.environment == \"prod\" ? 7 : 1 # Days\n"
                        ],
                        [
                            525,
                            "  preferred_backup_window = \"07:00-09:00\"\n"
                        ],
                        [
                            526,
                            "  # storage_encrypted       = true # Encrypted by default\n"
                        ],
                        [
                            527,
                            "  # deletion_protection = var.environment == \"prod\" # Enable for prod\n"
                        ],
                        [
                            528,
                            "  \n"
                        ],
                        [
                            529,
                            "  tags = local.tags\n"
                        ],
                        [
                            530,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        516,
                        530
                    ],
                    "resource": "aws_docdb_cluster.main_docdb_cluster",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DocDBBackupRetention",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-360",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "master_username": [
                            {
                                "type": "locals",
                                "name": "docdb_master_username",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "cluster_identifier": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "skip_final_snapshot": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "backup_retention_period": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "db_subnet_group_name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_74",
                    "bc_check_id": "BC_AWS_GENERAL_28",
                    "check_name": "Ensure DocumentDB is encrypted at rest (default is unencrypted)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "storage_encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            516,
                            "resource \"aws_docdb_cluster\" \"main_docdb_cluster\" {\n"
                        ],
                        [
                            517,
                            "  cluster_identifier      = \"${var.project_name}-docdb-cluster-${var.environment}\"\n"
                        ],
                        [
                            518,
                            "  engine                  = \"docdb\"\n"
                        ],
                        [
                            519,
                            "  master_username         = local.docdb_master_username\n"
                        ],
                        [
                            520,
                            "  master_password         = random_password.docdb_master_password.result\n"
                        ],
                        [
                            521,
                            "  db_subnet_group_name    = aws_docdb_subnet_group.main_docdb_subnet_group.name\n"
                        ],
                        [
                            522,
                            "  vpc_security_group_ids  = [aws_security_group.docdb_sg.id]\n"
                        ],
                        [
                            523,
                            "  skip_final_snapshot     = var.environment != \"prod\" # Set to false for prod\n"
                        ],
                        [
                            524,
                            "  backup_retention_period = var.environment == \"prod\" ? 7 : 1 # Days\n"
                        ],
                        [
                            525,
                            "  preferred_backup_window = \"07:00-09:00\"\n"
                        ],
                        [
                            526,
                            "  # storage_encrypted       = true # Encrypted by default\n"
                        ],
                        [
                            527,
                            "  # deletion_protection = var.environment == \"prod\" # Enable for prod\n"
                        ],
                        [
                            528,
                            "  \n"
                        ],
                        [
                            529,
                            "  tags = local.tags\n"
                        ],
                        [
                            530,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        516,
                        530
                    ],
                    "resource": "aws_docdb_cluster.main_docdb_cluster",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DocDBEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-28",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "master_username": [
                            {
                                "type": "locals",
                                "name": "docdb_master_username",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "cluster_identifier": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "skip_final_snapshot": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "backup_retention_period": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "db_subnet_group_name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_182",
                    "bc_check_id": "BC_AWS_GENERAL_102",
                    "check_name": "Ensure DocumentDB is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            516,
                            "resource \"aws_docdb_cluster\" \"main_docdb_cluster\" {\n"
                        ],
                        [
                            517,
                            "  cluster_identifier      = \"${var.project_name}-docdb-cluster-${var.environment}\"\n"
                        ],
                        [
                            518,
                            "  engine                  = \"docdb\"\n"
                        ],
                        [
                            519,
                            "  master_username         = local.docdb_master_username\n"
                        ],
                        [
                            520,
                            "  master_password         = random_password.docdb_master_password.result\n"
                        ],
                        [
                            521,
                            "  db_subnet_group_name    = aws_docdb_subnet_group.main_docdb_subnet_group.name\n"
                        ],
                        [
                            522,
                            "  vpc_security_group_ids  = [aws_security_group.docdb_sg.id]\n"
                        ],
                        [
                            523,
                            "  skip_final_snapshot     = var.environment != \"prod\" # Set to false for prod\n"
                        ],
                        [
                            524,
                            "  backup_retention_period = var.environment == \"prod\" ? 7 : 1 # Days\n"
                        ],
                        [
                            525,
                            "  preferred_backup_window = \"07:00-09:00\"\n"
                        ],
                        [
                            526,
                            "  # storage_encrypted       = true # Encrypted by default\n"
                        ],
                        [
                            527,
                            "  # deletion_protection = var.environment == \"prod\" # Enable for prod\n"
                        ],
                        [
                            528,
                            "  \n"
                        ],
                        [
                            529,
                            "  tags = local.tags\n"
                        ],
                        [
                            530,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        516,
                        530
                    ],
                    "resource": "aws_docdb_cluster.main_docdb_cluster",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DocDBEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-102",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "master_username": [
                            {
                                "type": "locals",
                                "name": "docdb_master_username",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "cluster_identifier": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "skip_final_snapshot": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "backup_retention_period": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "db_subnet_group_name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_85",
                    "bc_check_id": "BC_AWS_LOGGING_19",
                    "check_name": "Ensure DocumentDB Logging is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enabled_cloudwatch_logs_exports"
                        ]
                    },
                    "code_block": [
                        [
                            516,
                            "resource \"aws_docdb_cluster\" \"main_docdb_cluster\" {\n"
                        ],
                        [
                            517,
                            "  cluster_identifier      = \"${var.project_name}-docdb-cluster-${var.environment}\"\n"
                        ],
                        [
                            518,
                            "  engine                  = \"docdb\"\n"
                        ],
                        [
                            519,
                            "  master_username         = local.docdb_master_username\n"
                        ],
                        [
                            520,
                            "  master_password         = random_password.docdb_master_password.result\n"
                        ],
                        [
                            521,
                            "  db_subnet_group_name    = aws_docdb_subnet_group.main_docdb_subnet_group.name\n"
                        ],
                        [
                            522,
                            "  vpc_security_group_ids  = [aws_security_group.docdb_sg.id]\n"
                        ],
                        [
                            523,
                            "  skip_final_snapshot     = var.environment != \"prod\" # Set to false for prod\n"
                        ],
                        [
                            524,
                            "  backup_retention_period = var.environment == \"prod\" ? 7 : 1 # Days\n"
                        ],
                        [
                            525,
                            "  preferred_backup_window = \"07:00-09:00\"\n"
                        ],
                        [
                            526,
                            "  # storage_encrypted       = true # Encrypted by default\n"
                        ],
                        [
                            527,
                            "  # deletion_protection = var.environment == \"prod\" # Enable for prod\n"
                        ],
                        [
                            528,
                            "  \n"
                        ],
                        [
                            529,
                            "  tags = local.tags\n"
                        ],
                        [
                            530,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        516,
                        530
                    ],
                    "resource": "aws_docdb_cluster.main_docdb_cluster",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DocDBLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-19",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "master_username": [
                            {
                                "type": "locals",
                                "name": "docdb_master_username",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "cluster_identifier": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "skip_final_snapshot": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "backup_retention_period": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "db_subnet_group_name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_53",
                    "bc_check_id": "BC_AWS_S3_19",
                    "check_name": "Ensure S3 bucket has block public ACLS enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "block_public_acls"
                        ]
                    },
                    "code_block": [
                        [
                            561,
                            "resource \"aws_s3_bucket_public_access_block\" \"frontend_public_access\" {\n"
                        ],
                        [
                            562,
                            "  bucket = aws_s3_bucket.frontend_assets.id\n"
                        ],
                        [
                            563,
                            "\n"
                        ],
                        [
                            564,
                            "  block_public_acls       = false # Must be false if using ACLs for public read\n"
                        ],
                        [
                            565,
                            "  block_public_policy     = false # Must be false for public policy\n"
                        ],
                        [
                            566,
                            "  ignore_public_acls      = false\n"
                        ],
                        [
                            567,
                            "  restrict_public_buckets = false\n"
                        ],
                        [
                            568,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        561,
                        568
                    ],
                    "resource": "aws_s3_bucket_public_access_block.frontend_public_access",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicACLs",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_56",
                    "bc_check_id": "BC_AWS_S3_22",
                    "check_name": "Ensure S3 bucket has 'restrict_public_buckets' enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "restrict_public_buckets"
                        ]
                    },
                    "code_block": [
                        [
                            561,
                            "resource \"aws_s3_bucket_public_access_block\" \"frontend_public_access\" {\n"
                        ],
                        [
                            562,
                            "  bucket = aws_s3_bucket.frontend_assets.id\n"
                        ],
                        [
                            563,
                            "\n"
                        ],
                        [
                            564,
                            "  block_public_acls       = false # Must be false if using ACLs for public read\n"
                        ],
                        [
                            565,
                            "  block_public_policy     = false # Must be false for public policy\n"
                        ],
                        [
                            566,
                            "  ignore_public_acls      = false\n"
                        ],
                        [
                            567,
                            "  restrict_public_buckets = false\n"
                        ],
                        [
                            568,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        561,
                        568
                    ],
                    "resource": "aws_s3_bucket_public_access_block.frontend_public_access",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3RestrictPublicBuckets",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_55",
                    "bc_check_id": "BC_AWS_S3_21",
                    "check_name": "Ensure S3 bucket has ignore public ACLs enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ignore_public_acls"
                        ]
                    },
                    "code_block": [
                        [
                            561,
                            "resource \"aws_s3_bucket_public_access_block\" \"frontend_public_access\" {\n"
                        ],
                        [
                            562,
                            "  bucket = aws_s3_bucket.frontend_assets.id\n"
                        ],
                        [
                            563,
                            "\n"
                        ],
                        [
                            564,
                            "  block_public_acls       = false # Must be false if using ACLs for public read\n"
                        ],
                        [
                            565,
                            "  block_public_policy     = false # Must be false for public policy\n"
                        ],
                        [
                            566,
                            "  ignore_public_acls      = false\n"
                        ],
                        [
                            567,
                            "  restrict_public_buckets = false\n"
                        ],
                        [
                            568,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        561,
                        568
                    ],
                    "resource": "aws_s3_bucket_public_access_block.frontend_public_access",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3IgnorePublicACLs",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_54",
                    "bc_check_id": "BC_AWS_S3_20",
                    "check_name": "Ensure S3 bucket has block public policy enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "block_public_policy"
                        ]
                    },
                    "code_block": [
                        [
                            561,
                            "resource \"aws_s3_bucket_public_access_block\" \"frontend_public_access\" {\n"
                        ],
                        [
                            562,
                            "  bucket = aws_s3_bucket.frontend_assets.id\n"
                        ],
                        [
                            563,
                            "\n"
                        ],
                        [
                            564,
                            "  block_public_acls       = false # Must be false if using ACLs for public read\n"
                        ],
                        [
                            565,
                            "  block_public_policy     = false # Must be false for public policy\n"
                        ],
                        [
                            566,
                            "  ignore_public_acls      = false\n"
                        ],
                        [
                            567,
                            "  restrict_public_buckets = false\n"
                        ],
                        [
                            568,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        561,
                        568
                    ],
                    "resource": "aws_s3_bucket_public_access_block.frontend_public_access",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicPolicy",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            571,
                            "resource \"aws_s3_bucket_policy\" \"frontend_bucket_policy\" {\n"
                        ],
                        [
                            572,
                            "  bucket = aws_s3_bucket.frontend_assets.id\n"
                        ],
                        [
                            573,
                            "  policy = jsonencode({\n"
                        ],
                        [
                            574,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            575,
                            "    Statement = [\n"
                        ],
                        [
                            576,
                            "      {\n"
                        ],
                        [
                            577,
                            "        Sid       = \"PublicReadGetObject\"\n"
                        ],
                        [
                            578,
                            "        Effect    = \"Allow\"\n"
                        ],
                        [
                            579,
                            "        Principal = \"*\"\n"
                        ],
                        [
                            580,
                            "        Action    = \"s3:GetObject\"\n"
                        ],
                        [
                            581,
                            "        Resource  = \"${aws_s3_bucket.frontend_assets.arn}/*\"\n"
                        ],
                        [
                            582,
                            "      }\n"
                        ],
                        [
                            583,
                            "    ]\n"
                        ],
                        [
                            584,
                            "  })\n"
                        ],
                        [
                            585,
                            "  depends_on = [aws_s3_bucket_public_access_block.frontend_public_access]\n"
                        ],
                        [
                            586,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        571,
                        586
                    ],
                    "resource": "aws_s3_bucket_policy.frontend_bucket_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-23",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf"
                },
                {
                    "check_id": "CKV_AWS_310",
                    "bc_check_id": "BC_AWS_GENERAL_222",
                    "check_name": "Ensure CloudFront distributions should have origin failover configured",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionOriginFailover",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-310",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_68",
                    "bc_check_id": "BC_AWS_GENERAL_27",
                    "check_name": "CloudFront Distribution should have WAF enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "web_acl_id"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-27",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_374",
                    "bc_check_id": "BC_AWS_NETWORKING_97",
                    "check_name": "Ensure AWS CloudFront web distribution has geo restriction enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "restrictions/[0]/geo_restriction/[0]/restriction_type"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudFrontGeoRestrictionDisabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-374",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_86",
                    "bc_check_id": "BC_AWS_LOGGING_20",
                    "check_name": "Ensure CloudFront distribution has Access Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging_config/[0]/bucket"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/logging-20",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_74",
                    "bc_check_id": null,
                    "check_name": "Ensure AWS Load Balancers use strong ciphers",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_lb_listener": {
                                "https_listener[0]": {
                                    "__end_line__": 446,
                                    "__start_line__": 433,
                                    "certificate_arn": [
                                        "module.acm.acm_certificate_arn"
                                    ],
                                    "default_action": [
                                        {
                                            "target_group_arn": [
                                                "aws_lb_target_group.app_tg.arn"
                                            ],
                                            "type": [
                                                "forward"
                                            ]
                                        }
                                    ],
                                    "load_balancer_arn": [
                                        "aws_lb.main_alb.arn"
                                    ],
                                    "port": [
                                        443
                                    ],
                                    "protocol": [
                                        "HTTPS"
                                    ],
                                    "ssl_policy": [
                                        "ELBSecurityPolicy-2016-08"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_lb_listener.https_listener[0]",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "protocol",
                            "ssl_policy"
                        ]
                    },
                    "code_block": [
                        [
                            433,
                            "resource \"aws_lb_listener\" \"https_listener\" {\n"
                        ],
                        [
                            434,
                            "  count             = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set\n"
                        ],
                        [
                            435,
                            "  load_balancer_arn = aws_lb.main_alb.arn\n"
                        ],
                        [
                            436,
                            "  port              = 443\n"
                        ],
                        [
                            437,
                            "  protocol          = \"HTTPS\"\n"
                        ],
                        [
                            438,
                            "  ssl_policy        = \"ELBSecurityPolicy-2016-08\" # Choose appropriate SSL policy\n"
                        ],
                        [
                            439,
                            "  certificate_arn   = module.acm.acm_certificate_arn # From ACM module below\n"
                        ],
                        [
                            440,
                            "\n"
                        ],
                        [
                            441,
                            "  default_action {\n"
                        ],
                        [
                            442,
                            "    type             = \"forward\"\n"
                        ],
                        [
                            443,
                            "    target_group_arn = aws_lb_target_group.app_tg.arn\n"
                        ],
                        [
                            444,
                            "  }\n"
                        ],
                        [
                            445,
                            "  tags = local.tags\n"
                        ],
                        [
                            446,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        433,
                        446
                    ],
                    "resource": "aws_lb_listener.https_listener[0]",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": {},
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": null,
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_6",
                    "bc_check_id": "BC_AWS_NETWORKING_52",
                    "check_name": "Ensure that S3 bucket has a Public Access block",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "frontend_assets": {
                                    "__end_line__": 548,
                                    "__start_line__": 545,
                                    "bucket": [
                                        "www."
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.frontend_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "block_public_policy",
                            "resource_type",
                            "block_public_acls"
                        ]
                    },
                    "code_block": [
                        [
                            545,
                            "resource \"aws_s3_bucket\" \"frontend_assets\" {\n"
                        ],
                        [
                            546,
                            "  bucket = local.frontend_s3_bucket_name\n"
                        ],
                        [
                            547,
                            "  tags   = local.tags\n"
                        ],
                        [
                            548,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        545,
                        548
                    ],
                    "resource": "aws_s3_bucket.frontend_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "bucket": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_28",
                    "bc_check_id": "BC_AWS_NETWORKING_58",
                    "check_name": "Ensure public facing ALB are protected by WAF",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_lb": {
                                "main_alb": {
                                    "__end_line__": 391,
                                    "__start_line__": 382,
                                    "enable_deletion_protection": [
                                        false
                                    ],
                                    "internal": [
                                        false
                                    ],
                                    "load_balancer_type": [
                                        "application"
                                    ],
                                    "name": [
                                        "myapp-alb-dev"
                                    ],
                                    "security_groups": [
                                        [
                                            "aws_security_group.alb_sg.id"
                                        ]
                                    ],
                                    "subnets": [
                                        "module.vpc.public_subnets"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_lb.main_alb",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "internal",
                            "resource_type",
                            "load_balancer_type"
                        ]
                    },
                    "code_block": [
                        [
                            382,
                            "resource \"aws_lb\" \"main_alb\" {\n"
                        ],
                        [
                            383,
                            "  name               = \"${var.project_name}-alb-${var.environment}\"\n"
                        ],
                        [
                            384,
                            "  internal           = false\n"
                        ],
                        [
                            385,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            386,
                            "  security_groups    = [aws_security_group.alb_sg.id]\n"
                        ],
                        [
                            387,
                            "  subnets            = module.vpc.public_subnets\n"
                        ],
                        [
                            388,
                            "  enable_deletion_protection = false # Set to true for production\n"
                        ],
                        [
                            389,
                            "\n"
                        ],
                        [
                            390,
                            "  tags = local.tags\n"
                        ],
                        [
                            391,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        382,
                        391
                    ],
                    "resource": "aws_lb.main_alb",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-public-facing-alb-are-protected-by-waf",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_145",
                    "bc_check_id": "BC_AWS_GENERAL_56",
                    "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "frontend_assets": {
                                    "__end_line__": 548,
                                    "__start_line__": 545,
                                    "bucket": [
                                        "www."
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.frontend_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "server_side_encryption_configuration/rule/apply_server_side_encryption_by_default/sse_algorithm",
                            "resource_type",
                            "rule/apply_server_side_encryption_by_default/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            545,
                            "resource \"aws_s3_bucket\" \"frontend_assets\" {\n"
                        ],
                        [
                            546,
                            "  bucket = local.frontend_s3_bucket_name\n"
                        ],
                        [
                            547,
                            "  tags   = local.tags\n"
                        ],
                        [
                            548,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        545,
                        548
                    ],
                    "resource": "aws_s3_bucket.frontend_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "bucket": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_47",
                    "bc_check_id": "BC_AWS_GENERAL_186",
                    "check_name": "Ensure AWS CloudFront attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution[0]": {
                                    "__end_line__": 696,
                                    "__start_line__": 636,
                                    "aliases": [
                                        "True"
                                    ],
                                    "comment": [
                                        "CloudFront for www."
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "S3-www."
                                            ],
                                            "viewer_protocol_policy": [
                                                "redirect-to-https"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.frontend_assets.bucket_regional_domain_name"
                                            ],
                                            "origin_id": [
                                                "S3-www."
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_100"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "restriction_type": [
                                                        "none"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "acm_certificate_arn": [
                                                "module.acm[0].acm_certificate_arn"
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.2_2021"
                                            ],
                                            "ssl_support_method": [
                                                "sni-only"
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_cloudfront_distribution.s3_distribution[0]",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "rule/*/statement/managed_rule_group_statement/name",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-47",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_57",
                    "bc_check_id": "BC_AWS_GENERAL_192",
                    "check_name": "Ensure Secrets Manager secrets should have automatic rotation enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_secretsmanager_secret": {
                                "docdb_credentials": {
                                    "__end_line__": 496,
                                    "__start_line__": 492,
                                    "description": [
                                        "DocumentDB master credentials"
                                    ],
                                    "name": [
                                        "myapp-docdb-credentials-dev"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_secretsmanager_secret.docdb_credentials",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            492,
                            "resource \"aws_secretsmanager_secret\" \"docdb_credentials\" {\n"
                        ],
                        [
                            493,
                            "  name        = \"${var.project_name}-docdb-credentials-${var.environment}\"\n"
                        ],
                        [
                            494,
                            "  description = \"DocumentDB master credentials\"\n"
                        ],
                        [
                            495,
                            "  tags        = local.tags\n"
                        ],
                        [
                            496,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        492,
                        496
                    ],
                    "resource": "aws_secretsmanager_secret.docdb_credentials",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-2-57",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "tfvar",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/terraform.tfvars",
                                "module_connection": false
                            },
                            {
                                "type": "variable",
                                "name": "environment",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_iam_role.ecs_task_execution_role",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_docdb_subnet_group.main_docdb_subnet_group",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_21",
                    "bc_check_id": "BC_AWS_S3_16",
                    "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "frontend_assets": {
                                    "__end_line__": 548,
                                    "__start_line__": 545,
                                    "bucket": [
                                        "www."
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.frontend_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "versioning/enabled",
                            "resource_type",
                            "versioning_configuration/status"
                        ]
                    },
                    "code_block": [
                        [
                            545,
                            "resource \"aws_s3_bucket\" \"frontend_assets\" {\n"
                        ],
                        [
                            546,
                            "  bucket = local.frontend_s3_bucket_name\n"
                        ],
                        [
                            547,
                            "  tags   = local.tags\n"
                        ],
                        [
                            548,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        545,
                        548
                    ],
                    "resource": "aws_s3_bucket.frontend_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "bucket": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_62",
                    "bc_check_id": "BC_AWS_LOGGING_36",
                    "check_name": "Ensure S3 buckets should have event notifications enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "frontend_assets": {
                                    "__end_line__": 548,
                                    "__start_line__": 545,
                                    "bucket": [
                                        "www."
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.frontend_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            545,
                            "resource \"aws_s3_bucket\" \"frontend_assets\" {\n"
                        ],
                        [
                            546,
                            "  bucket = local.frontend_s3_bucket_name\n"
                        ],
                        [
                            547,
                            "  tags   = local.tags\n"
                        ],
                        [
                            548,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        545,
                        548
                    ],
                    "resource": "aws_s3_bucket.frontend_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "bucket": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_144",
                    "bc_check_id": "BC_AWS_GENERAL_72",
                    "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "frontend_assets": {
                                    "__end_line__": 548,
                                    "__start_line__": 545,
                                    "bucket": [
                                        "www."
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.frontend_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "replication_configuration/rules/*/status",
                            "rule/*/status"
                        ]
                    },
                    "code_block": [
                        [
                            545,
                            "resource \"aws_s3_bucket\" \"frontend_assets\" {\n"
                        ],
                        [
                            546,
                            "  bucket = local.frontend_s3_bucket_name\n"
                        ],
                        [
                            547,
                            "  tags   = local.tags\n"
                        ],
                        [
                            548,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        545,
                        548
                    ],
                    "resource": "aws_s3_bucket.frontend_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "bucket": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_103",
                    "bc_check_id": "BC_AWS_GENERAL_43",
                    "check_name": "Ensure that load balancer is using at least TLS 1.2",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_lb_listener": {
                                "https_listener[0]": {
                                    "__end_line__": 446,
                                    "__start_line__": 433,
                                    "certificate_arn": [
                                        "module.acm.acm_certificate_arn"
                                    ],
                                    "default_action": [
                                        {
                                            "target_group_arn": [
                                                "aws_lb_target_group.app_tg.arn"
                                            ],
                                            "type": [
                                                "forward"
                                            ]
                                        }
                                    ],
                                    "load_balancer_arn": [
                                        "aws_lb.main_alb.arn"
                                    ],
                                    "port": [
                                        443
                                    ],
                                    "protocol": [
                                        "HTTPS"
                                    ],
                                    "ssl_policy": [
                                        "ELBSecurityPolicy-2016-08"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_lb_listener.https_listener[0]",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "protocol",
                            "resource_type",
                            "default_action/type",
                            "default_action/redirect/protocol",
                            "load_balancer_type",
                            "ssl_policy"
                        ]
                    },
                    "code_block": [
                        [
                            433,
                            "resource \"aws_lb_listener\" \"https_listener\" {\n"
                        ],
                        [
                            434,
                            "  count             = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set\n"
                        ],
                        [
                            435,
                            "  load_balancer_arn = aws_lb.main_alb.arn\n"
                        ],
                        [
                            436,
                            "  port              = 443\n"
                        ],
                        [
                            437,
                            "  protocol          = \"HTTPS\"\n"
                        ],
                        [
                            438,
                            "  ssl_policy        = \"ELBSecurityPolicy-2016-08\" # Choose appropriate SSL policy\n"
                        ],
                        [
                            439,
                            "  certificate_arn   = module.acm.acm_certificate_arn # From ACM module below\n"
                        ],
                        [
                            440,
                            "\n"
                        ],
                        [
                            441,
                            "  default_action {\n"
                        ],
                        [
                            442,
                            "    type             = \"forward\"\n"
                        ],
                        [
                            443,
                            "    target_group_arn = aws_lb_target_group.app_tg.arn\n"
                        ],
                        [
                            444,
                            "  }\n"
                        ],
                        [
                            445,
                            "  tags = local.tags\n"
                        ],
                        [
                            446,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        433,
                        446
                    ],
                    "resource": "aws_lb_listener.https_listener[0]",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-43",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV_AWS_18",
                    "bc_check_id": "BC_AWS_S3_13",
                    "check_name": "Ensure the S3 bucket has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "frontend_assets": {
                                    "__end_line__": 548,
                                    "__start_line__": 545,
                                    "bucket": [
                                        "www."
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.frontend_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "logging"
                        ]
                    },
                    "code_block": [
                        [
                            545,
                            "resource \"aws_s3_bucket\" \"frontend_assets\" {\n"
                        ],
                        [
                            546,
                            "  bucket = local.frontend_s3_bucket_name\n"
                        ],
                        [
                            547,
                            "  tags   = local.tags\n"
                        ],
                        [
                            548,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        545,
                        548
                    ],
                    "resource": "aws_s3_bucket.frontend_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "bucket": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_32",
                    "bc_check_id": "BC_AWS_NETWORKING_65",
                    "check_name": "Ensure CloudFront distribution has a response headers policy attached",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution[0]": {
                                    "__end_line__": 696,
                                    "__start_line__": 636,
                                    "aliases": [
                                        "True"
                                    ],
                                    "comment": [
                                        "CloudFront for www."
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "S3-www."
                                            ],
                                            "viewer_protocol_policy": [
                                                "redirect-to-https"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.frontend_assets.bucket_regional_domain_name"
                                            ],
                                            "origin_id": [
                                                "S3-www."
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_100"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "restriction_type": [
                                                        "none"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "acm_certificate_arn": [
                                                "module.acm[0].acm_certificate_arn"
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.2_2021"
                                            ],
                                            "ssl_support_method": [
                                                "sni-only"
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_cloudfront_distribution.s3_distribution[0]",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-networking-65",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_61",
                    "bc_check_id": "BC_AWS_LOGGING_35",
                    "check_name": "Ensure that an S3 bucket has a lifecycle configuration",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "frontend_assets": {
                                    "__end_line__": 548,
                                    "__start_line__": 545,
                                    "bucket": [
                                        "www."
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "__address__": "aws_s3_bucket.frontend_assets",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "lifecycle_rule",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            545,
                            "resource \"aws_s3_bucket\" \"frontend_assets\" {\n"
                        ],
                        [
                            546,
                            "  bucket = local.frontend_s3_bucket_name\n"
                        ],
                        [
                            547,
                            "  tags   = local.tags\n"
                        ],
                        [
                            548,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        545,
                        548
                    ],
                    "resource": "aws_s3_bucket.frontend_assets",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "bucket": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                },
                {
                    "check_id": "CKV2_AWS_46",
                    "bc_check_id": "BC_AWS_IAM_71",
                    "check_name": "Ensure AWS CloudFront Distribution with S3 have Origin Access set to enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution[0]": {
                                    "__end_line__": 696,
                                    "__start_line__": 636,
                                    "aliases": [
                                        "True"
                                    ],
                                    "comment": [
                                        "CloudFront for www."
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "S3-www."
                                            ],
                                            "viewer_protocol_policy": [
                                                "redirect-to-https"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.frontend_assets.bucket_regional_domain_name"
                                            ],
                                            "origin_id": [
                                                "S3-www."
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_100"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "restriction_type": [
                                                        "none"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "dev",
                                            "ManagedBy": "Terraform",
                                            "Project": "myapp"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "acm_certificate_arn": [
                                                "module.acm[0].acm_certificate_arn"
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.2_2021"
                                            ],
                                            "ssl_support_method": [
                                                "sni-only"
                                            ]
                                        }
                                    ],
                                    "__address__": "aws_cloudfront_distribution.s3_distribution[0]",
                                    "__provider_address__": "aws.default"
                                }
                            }
                        },
                        "evaluated_keys": [
                            "origin/*/s3_origin_config",
                            "resource_type",
                            "origin/*/origin_access_control_id"
                        ]
                    },
                    "code_block": [
                        [
                            636,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            637,
                            "  count = var.domain_name != \"\" ? 1 : 0 # Only create if domain is set for CloudFront\n"
                        ],
                        [
                            638,
                            "\n"
                        ],
                        [
                            639,
                            "  origin {\n"
                        ],
                        [
                            640,
                            "    domain_name = aws_s3_bucket.frontend_assets.bucket_regional_domain_name\n"
                        ],
                        [
                            641,
                            "    origin_id   = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            642,
                            "\n"
                        ],
                        [
                            643,
                            "    # Use S3 Origin Config with OAI if you chose that S3 policy route\n"
                        ],
                        [
                            644,
                            "    # s3_origin_config {\n"
                        ],
                        [
                            645,
                            "    #   origin_access_identity = aws_cloudfront_origin_access_identity.oai.cloudfront_access_identity_path\n"
                        ],
                        [
                            646,
                            "    # }\n"
                        ],
                        [
                            647,
                            "  }\n"
                        ],
                        [
                            648,
                            "\n"
                        ],
                        [
                            649,
                            "  enabled             = true\n"
                        ],
                        [
                            650,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            651,
                            "  comment             = \"CloudFront for ${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            652,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            653,
                            "\n"
                        ],
                        [
                            654,
                            "  # Logging (optional)\n"
                        ],
                        [
                            655,
                            "  # logging_config {\n"
                        ],
                        [
                            656,
                            "  #   include_cookies = false\n"
                        ],
                        [
                            657,
                            "  #   bucket          = \"mylogs.s3.amazonaws.com\" # Create this bucket separately\n"
                        ],
                        [
                            658,
                            "  #   prefix          = \"cloudfront-logs/\"\n"
                        ],
                        [
                            659,
                            "  # }\n"
                        ],
                        [
                            660,
                            "\n"
                        ],
                        [
                            661,
                            "  aliases = [var.domain_name != \"\" ? \"${var.frontend_subdomain}.${var.domain_name}\" : \"\"]\n"
                        ],
                        [
                            662,
                            "\n"
                        ],
                        [
                            663,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            664,
                            "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                        ],
                        [
                            665,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            666,
                            "    target_origin_id = \"S3-${local.frontend_s3_bucket_name}\"\n"
                        ],
                        [
                            667,
                            "\n"
                        ],
                        [
                            668,
                            "    forwarded_values {\n"
                        ],
                        [
                            669,
                            "      query_string = false\n"
                        ],
                        [
                            670,
                            "      cookies {\n"
                        ],
                        [
                            671,
                            "        forward = \"none\"\n"
                        ],
                        [
                            672,
                            "      }\n"
                        ],
                        [
                            673,
                            "    }\n"
                        ],
                        [
                            674,
                            "\n"
                        ],
                        [
                            675,
                            "    viewer_protocol_policy = \"redirect-to-https\"\n"
                        ],
                        [
                            676,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            677,
                            "    default_ttl            = 3600 # 1 hour\n"
                        ],
                        [
                            678,
                            "    max_ttl                = 86400 # 24 hours\n"
                        ],
                        [
                            679,
                            "  }\n"
                        ],
                        [
                            680,
                            "\n"
                        ],
                        [
                            681,
                            "  # Price class: Use PriceClass_100 for US/EU, PriceClass_All for global\n"
                        ],
                        [
                            682,
                            "  price_class = \"PriceClass_100\"\n"
                        ],
                        [
                            683,
                            "\n"
                        ],
                        [
                            684,
                            "  restrictions {\n"
                        ],
                        [
                            685,
                            "    geo_restriction {\n"
                        ],
                        [
                            686,
                            "      restriction_type = \"none\" # Or \"whitelist\"/\"blacklist\" specific countries\n"
                        ],
                        [
                            687,
                            "    }\n"
                        ],
                        [
                            688,
                            "  }\n"
                        ],
                        [
                            689,
                            "\n"
                        ],
                        [
                            690,
                            "  viewer_certificate {\n"
                        ],
                        [
                            691,
                            "    acm_certificate_arn      = module.acm[0].acm_certificate_arn # Assumes ACM module is used\n"
                        ],
                        [
                            692,
                            "    ssl_support_method       = \"sni-only\"\n"
                        ],
                        [
                            693,
                            "    minimum_protocol_version = \"TLSv1.2_2021\"\n"
                        ],
                        [
                            694,
                            "  }\n"
                        ],
                        [
                            695,
                            "  tags = local.tags\n"
                        ],
                        [
                            696,
                            "}\n"
                        ]
                    ],
                    "file_path": "/terraform/main.tf",
                    "file_abs_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "repo_file_path": "/terraform/main.tf",
                    "file_line_range": [
                        636,
                        696
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution[0]",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "dev",
                        "ManagedBy": "Terraform",
                        "Project": "myapp"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "bc_category": null,
                    "benchmarks": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "connected_node": null,
                    "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-aws-cloudfromt-distribution-with-s3-have-origin-access-set-to-enabled",
                    "details": [],
                    "check_len": null,
                    "definition_context_file_path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                    "breadcrumbs": {
                        "aliases": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "tags": [
                            {
                                "type": "locals",
                                "name": "tags",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ],
                        "comment": [
                            {
                                "type": "variable",
                                "name": "frontend_subdomain",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "locals",
                                "name": "frontend_s3_bucket_name",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_s3_bucket.frontend_assets",
                                "path": "/home/runner/work/InfraMate/InfraMate/target_repo/terraform/main.tf",
                                "module_connection": false
                            }
                        ]
                    }
                }
            ],
            "skipped_checks": [],
            "parsing_errors": []
        },
        "summary": {
            "passed": 58,
            "failed": 45,
            "skipped": 0,
            "parsing_errors": 0,
            "resource_count": 32,
            "checkov_version": "3.2.427"
        },
        "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
    },
    {
        "check_type": "terraform_plan",
        "results": {
            "passed_checks": [],
            "failed_checks": [],
            "skipped_checks": [],
            "parsing_errors": [
                "./security_reports/checkov_report.json"
            ]
        },
        "summary": {
            "passed": 0,
            "failed": 0,
            "skipped": 0,
            "parsing_errors": 1,
            "resource_count": 0,
            "checkov_version": "3.2.427"
        },
        "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
    }
]
